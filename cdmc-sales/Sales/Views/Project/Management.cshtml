@{
    ViewBag.Title = "Project";
}
@using Entity
@using Utl
@using BLL
@model Project
<h2>
    项目管理</h2>

@*@Html.Partial("MemberEditor", new LeadCall() { LeadID = Model.ID })
@Html.Partial("LeadPackageEditor", CRM_Logical.GetTargetOfPackage(Model, (object)ViewBag.ProjectID))*@
@(Html.Telerik().TabStrip().Name("TabStrip").SelectedIndex(0).Items(items =>
{
    items.Add().Text("基本信息").Content(@<text>@BaseInfo(Model)</text>);
    items.Add().Text("成员信息").Content(@<text>@Members(Model)</text>);
    items.Add().Text("每月目标").Content(@<text>@Targets(Model)</text>);
    items.Add().Text("核心公司").Content(@<text>@Companys(Model)</text>);
    items.Add().Text("出单情况").Content(@<text>@Deals(Model)</text>);

})
)
@helper BaseInfo(Project project)
    { 
   
    <div style="width: 500;">
        <ul>
            <li>
                <label>
                    项目名称:</label>@project.Name</li>
            <li>
                <label>
                    开始时间:</label>@project.StartDate</li>
            <li>
                <label>
                    结束时间:</label>@project.EndDate</li>
            <li>
                <label>
                    项目状态:</label>@project.IsActived</li>
            <li>
                <label>
                    销售目标:</label>@project.Target</li>
            <li>
                <label>
                    激活:</label>@project.IsActived</li>
                    <li>
            <label>
                    板块负责人:</label>@project.Manager</li>
            <li>
                <label>
                    团队负责人:</label>@project.TeamLeader</li>
        </ul>
    </div>
     
}
@helper Members(Project p)
    { 

    @(Html.Telerik().Grid<Member>(p.Members).Name("members")
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.Name).Width(200);
                    c.Bound(item => item.Characters);
                    c.Bound(item => item.ID).Title("操作").Width(200).Template(@<span> <a href=@Url.Content("~/Member/Edit/" + item.ID) >
                        编辑</a> | <a href=@Url.Content("~/Member/Details/" + item.ID)>详细</a> | <a href=@Url.Content("~/Member/delete/" + item.ID) >
                            删除</a> </span>);
                }).Scrollable(scrolling => scrolling.Height(350))
                )
  @Html.ActionLink("添加成员", "Create", "Member", new { projectid = Model.ID }, null)    
   <span> </span>     
  @Html.ActionLink("分配字头", "Distribution", "Project", new { projectid = Model.ID }, null)   
}
        
@helper Deals(Project p)
    { 

    @(Html.Telerik().Grid<Deal>(p.Deals).Name("Deals")
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.Payment).Width(200);
                    c.Bound(item => item.IsClosed).Width(100);
                    c.Bound(item => item.Lead.FullName).Width(100);
                    c.Bound(item => item.Lead.Company.FullName).Width(100);
                    c.Bound(item => item.ID).Title("操作").Width(200).Template(@<span> <a href=@Url.Content("~/Member/Edit/" + item.ID) >
                        编辑</a> | <a href=@Url.Content("~/Member/Details/" + item.ID)>详细</a> | <a href=@Url.Content("~/Member/delete/" + item.ID) >
                            删除</a> </span>);
                }).Scrollable(scrolling => scrolling.Height(350))

)
  
}

@helper Companys(Project p)
    {  
     @(Html.Telerik().Grid(p.Companys).Name("Company")
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.Name_EN).Width(150);
                    c.Bound(item => item.Name_CH).Width(150);
                    c.Bound(item => item.DistrictNumber.FullName).Width(100);
                    c.Bound(item => item.Contact).Width(100);
                    c.Bound(item => item.Available).Width(100);
                    c.Bound(item => item.Category.Name_CH).Title("行业").Width(100);
                    c.Bound(item => item.CompanyType.Name).Width(100);
                    c.Bound(item => item.Cerator).Width(100);
                    c.Bound(item => item.From).Width(100);
                })
                .Resizable(resizing => resizing.Columns(true))
                .Groupable()
                 .Pageable(page => page.PageSize(10))
                .Sortable()
                .Filterable()
                .Scrollable(scrolling => scrolling.Height(350))
                        )
    @Html.ActionLink("管理销售对象", "SelectCompany", "Project", new { projectid = Model.ID }, null)
}



@helper Targets(Project p)
    { 
      @(Html.Telerik().Grid<TargetOfMonth>(p.TargetOfMonths).Name("TargetOfMonths")
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {

                    c.Bound(item => item.BaseDeal).Template(@<text>@Html.Partial("DisplayCurrency", DisplayCurrency.Dollars(item, "BaseDeal")) </text>).Width(100);
                    c.Bound(item => item.Deal).Width(100).Template(@<text>@Html.Partial("DisplayCurrency", DisplayCurrency.Dollars(item, "Deal")) </text>).Width(100);
                    c.Bound(item => item.CheckIn).Template(@<text>@Html.Partial("DisplayCurrency", DisplayCurrency.Dollars(item, "CheckIn")) </text>).Width(100);
                    c.Bound(item => item.StartDate).Template(@<text><p>@item.StartDate.ToShortDateString()</p></text>).Width(100);
                    c.Bound(item => item.EndDate).Template(@<text><p>@item.EndDate.ToShortDateString()</p></text>).Width(100);
                    c.Bound(item => item.ID).Title("操作").Width(200).Template(@<span> <a href=@Url.Content("~/TargetOfMonth/Edit/" + item.ID) >
                        编辑</a> | <a href=@Url.Content("~/TargetOfMonth/Details/" + item.ID)>详细</a> | <a href=@Url.Content("~/TargetOfMonth/delete/" + item.ID) >删除</a> </span>);
                }).Scrollable(scrolling => scrolling.Height(350))
           )
      
@Html.ActionLink("创建新月目标", "Create", "TargetOfMonth", new { projectid = Model.ID }, null)    
<span>     </span>
 @Html.ActionLink("目标划分", "Index", "TargetOfMonth", new { projectid = Model.ID }, null)     
}


