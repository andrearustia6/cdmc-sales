@using Entity
@using Utl
@model Project
<fieldset>
    <legend>@SR.Form</legend>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.Name_CH)：项目的中文名称
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name_CH)
        @Html.ValidationMessageFor(model => model.Name_CH)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Name_EN)：项目的英文名称
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name_EN)
        @Html.ValidationMessageFor(model => model.Name_EN)
    </div>
     <div class="editor-label">
        @Html.LabelFor(model => model.ProjectTypeID)：项目的类型
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.ProjectTypeID, new SelectList(CH.GetAllData<ProjectType>(),"ID","Name"),"-请选择-")
        @Html.ValidationMessageFor(model => model.Name_EN)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectState)：项目的属性
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.ProjectState, SelectHelper.ProjectStateSelectList(), "请选择")
        @Html.ValidationMessageFor(model => model.Name_EN)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.AreaID)：项目的默认行业
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.AreaID, new SelectList(CH.GetAllData<Area>(), "ID", "Name"), "-请选择-")
        @Html.ValidationMessageFor(model => model.AreaID)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Location)：项目举办地点
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Location )
        @Html.ValidationMessageFor(model => model.Location)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.IsActived)：项目是否激活
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.IsActived)
        @Html.ValidationMessageFor(model => model.IsActived)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectCode)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ProjectCode)
        @Html.ValidationMessageFor(model => model.ProjectCode)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectUnitCode)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ProjectUnitCode)
        @Html.ValidationMessageFor(model => model.ProjectUnitCode)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectUnitName )
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ProjectUnitName)
        @Html.ValidationMessageFor(model => model.ProjectUnitName)
    </div>
    
    <div class="editor-label">
        @Html.LabelFor(model => model.StartDate)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.StartDate)
        @Html.ValidationMessageFor(model => model.StartDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.EndDate)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.EndDate)
        @Html.ValidationMessageFor(model => model.EndDate)
    </div>

     <div class="editor-label">
        @Html.LabelFor(model => model.ConferenceStartDate )
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.ConferenceStartDate)
        @Html.ValidationMessageFor(model => model.ConferenceStartDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ConferenceEndDate )
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.ConferenceEndDate)
        @Html.ValidationMessageFor(model => model.ConferenceEndDate)
    </div>
    @{
      
    <div class="editor-label">
        @Html.LabelFor(model => model.Manager)
    </div>
    <div class="editor-field">

         @Html.Telerik().ComboBoxFor(model => model.Manager).BindTo(new SelectList(Employee.GetEmplyeeByLVL(ManagerRequired.LVL,SuperManagerRequired.LVL)))
        @Html.ValidationMessageFor(model => model.Manager)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.TeamLeader)
    </div>
    <div class="editor-field">
         
        @*@Html.Telerik().ComboBoxFor(model => model.TeamLeader).BindTo(new SelectList(Employee.GetEmplyeeByLVL(LeaderRequired.LVL,ManagerRequired.LVL)))*@
        @Html.Telerik().AutoCompleteFor(model => model.TeamLeader).AutoFill(true).Multiple(multi => { multi.Separator("; ").Enabled(true); }).BindTo(Employee.GetEmplyeeByLVL(LeaderRequired.LVL))
        @Html.ValidationMessageFor(model => model.TeamLeader)
    </div>
      <div class="editor-label">
        @Html.LabelFor(model => model.Market)
    </div>
    <div class="editor-field">
         @*@Html.Telerik().ComboBoxFor(model => model.Market).BindTo(new SelectList(Employee.GetEmplyeeByLVL(MarketInterfaceRequired.LVL)))*@
         @Html.Telerik().AutoCompleteFor(model => model.Market).AutoFill(true).Multiple(multi => { multi.Separator("; ").Enabled(true); }).BindTo(Employee.GetEmplyeeByLVL(MarketInterfaceRequired.LVL))
        @Html.ValidationMessageFor(model => model.Market)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Product)
    </div>
    <div class="editor-field">
        @*@Html.Telerik().ComboBoxFor(model => model.Product).BindTo(new SelectList(Employee.GetEmplyeeByLVL( ProductInterfaceRequired.LVL )))*@
        @Html.Telerik().AutoCompleteFor(model => model.Product).AutoFill(true).Multiple(multi => { multi.Separator("; ").Enabled(true); }).BindTo(Employee.GetEmplyeeByLVL(ProductInterfaceRequired.LVL))
        @Html.ValidationMessageFor(model => model.Product)
    </div>
     <div class="editor-label">
        @Html.LabelFor(model => model.Conference) 
    </div>
    <div class="editor-field">
        
        @*<div class="t-widget t-combobox t-header">
            <div class="t-dropdown-wrap t-state-default">
                @Html.DropDownListFor(model => model.Product, new SelectList(Employee.GetEmplyeeByLVL(ProductInterfaceRequired.LVL), "UserName", "UserName"), new { @class = "t-input", style="width:152px;height:20px;" })
            </div>
        </div>*@
        @Html.Telerik().AutoCompleteFor(model => model.Conference).AutoFill(true).Multiple(multi => { multi.Separator("; ").Enabled(true); }).BindTo(Employee.GetEmplyeeByLVL(ConferenceInterfaceRequired.LVL))
        @*@Html.Telerik().ComboBoxFor(model => model.Conference).BindTo(new SelectList(Employee.GetEmplyeeByLVL(ConferenceInterfaceRequired.LVL), "UserName", "UserName"))*@
        @Html.ValidationMessageFor(model => model.Conference)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Target)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.Target)
        @Html.ValidationMessageFor(model => model.Target)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.SaleBrief)：填写项目SalesBrief的相关信息
    </div>
    <div class="editor-field">
        @Html.Telerik().EditorFor(model => model.SaleBrief)
        @Html.ValidationMessageFor(model => model.SaleBrief)
    </div>
     <div class="editor-label">
        @Html.LabelFor(model => model.SalesBriefName)：项目简介的文件名称
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.SalesBriefName)
        @Html.ValidationMessageFor(model => model.SalesBriefName)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.SalesBriefUrl)：上传项目简介相关附件
    </div>
    <div class="editor-field">
     @{if (Model != null)
          {
            @Html.HiddenFor(m => m.SalesBriefUrl)
            @Html.DisplayFor(model => model.SalesBriefUrl)
          }
        }
        @Html.Telerik().Upload().Async(a => a.AutoUpload(true)).Name("attachments").Multiple(false)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Others)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Others)
        @Html.ValidationMessageFor(model => model.Others)
    </div>
        }
</fieldset>
