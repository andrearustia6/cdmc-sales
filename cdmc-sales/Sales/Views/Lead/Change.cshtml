@model Lead
@using Utl
@using Entity

<fieldset>
    <legend>@SR.Form</legend>
    @Html.Hidden("CRID",ViewBag.CRID as int?)
    <div class="editor-label">
        @Html.LabelFor(model => model.Name_EN)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name_EN)
        @Html.ValidationMessageFor(model => model.Name_EN)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Name_CH)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Name_CH)
        @Html.ValidationMessageFor(model => model.Name_CH)
    </div>
    <div class="editor-label">
        @Html.Label("个人照片")
    </div>
     <div class="editor-field">
        @{if (Model != null)
          {
            <img  alt="上传文件" width="300" height="200" src=@Url.Action("ShowImage", "Image", new { id = Model.ImageID }) />
          }
        }
        @Html.Telerik().Upload().Async(a=>a.AutoUpload(true)).Name("attachments").Multiple(false)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Gender)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Gender, new SelectList(new List<string>() { "Mr", "Ms" }), "-请选择-")
        @Html.ValidationMessageFor(model => model.Gender)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Title)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Title)
        @Html.ValidationMessageFor(model => model.Title)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Department)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Department)
        @Html.ValidationMessageFor(model => model.Department)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Contact)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Contact)
        @Html.ValidationMessageFor(model => model.Contact)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.EMail)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.EMail)
        @Html.ValidationMessageFor(model => model.EMail)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Birthday)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.Birthday)
        @Html.ValidationMessageFor(model => model.Birthday)
    </div>
     <div class="editor-label">
        @Html.LabelFor(model => model.PersonalEmailAddress)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.PersonalEmailAddress)
        @Html.ValidationMessageFor(model => model.PersonalEmailAddress)
    </div>
     <div class="editor-label">
        @Html.LabelFor(model => model.Address)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Address)
        @Html.ValidationMessageFor(model => model.Address)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.ZIP )
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ZIP)
        @Html.ValidationMessageFor(model => model.ZIP)
    </div>

     <div class="editor-label">
        @Html.LabelFor(model => model.Fax)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Fax)
        @Html.ValidationMessageFor(model => model.Fax)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.Mobile)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Mobile)
        @Html.ValidationMessageFor(model => model.Mobile)
    </div>

    <div class="editor-label">
        @Html.Label("所属公司")
    </div>
    <div class="editor-label">
    @{
        var id = Model == null ? (int)ViewBag.CompanyID : Model.CompanyID;
         @Html.Label(CH.GetDataById<Company>(id).Name);
         @Html.Hidden("CompanyID", id)
     }
    </div>
</fieldset>

@if (Model == null||Model.ID==0)
{
   <fieldset>
   <legend>在此新建的Lead下继续添加Call，如果选了Call类型，表示继续生产Call 结果，如果不选，表示只是录入Lead信息</legend>

        <div class="editor-label">
            @Html.Label("LeadCallTypeID", "Call 类型")
        </div>
        <div class="editor-field">
            @Html.DropDownList("LeadCallTypeID", new SelectList(CH.GetAllData<LeadCallType>(),"ID","Name"),"-请选择-")
        </div>

        <div class="editor-label">
            @Html.Label("Result", "结果")
        </div>
        <div class="editor-field">
            @Html.TextArea("Result")
        </div>

        <div class="editor-label">
            @Html.Label("CallBackDate","回打时间")
        </div>
        <div class="editor-field">
            @Html.Telerik().DateTimePicker().Name("CallBackDate")
        </div>

        <div class="editor-label">
            @Html.Label("CallDate","拨打时间")
        </div>
        <div class="editor-field">
            @Html.Telerik().DateTimePicker().Name("CallDate").Value(DateTime.Now)
        </div>
 
   </fieldset> 
}