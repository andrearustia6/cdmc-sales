@{
    ViewBag.Title = "月调研报表";
}
@using Sales.Model
@using Entity
@using BLL
@model MonthDuration
<fieldset>
    <legend>月份</legend>
    @{
        using (Html.BeginForm())
        {
            var m = ViewBag.SelectedMonth as int?;
            m = m == null ? DateTime.Now.Month : m;
        @Html.DropDownList("month", new SelectList(new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }, m), new { onchange = "this.form.submit();" })
        }
    }
</fieldset>
@if (Utl.Employee.CurrentRole.Level >= Role.LVL_Manager)
{
    <fieldset>
        <legend>公司调研报表</legend>
        @(Html.Telerik().Grid<_CompanyResearchDetail>().Name("GridCompany")
     .ToolBar(toolBar => toolBar.Template(
                @<text><span><label>
                    项目筛选:
                </label>
                    @Html.DropDownList("selectProject", Utl.SelectHelper.SaleRelatedProjects(), "所有项目", new { onchange = "selectChange(true);", style = "width:150px" })
                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>
                    <label>
                        销售筛选:
                    </label>
                    @Html.DropDownList("selectSales", new SelectList(Utl.SelectHelper.MemberSelectListInOwnProject()), "所有销售", new { onchange = "selectChange(false);", style = "width:150px" })
                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>
                    <label>
                        状态筛选:
                    </label>
                    <select id="selectType" onchange="selectChange(false);" style="width: 150px">
                        <option value="0">所有调研</option>
                        <option value="1">未通过</option>
                        <option value="2">被点评</option>
                    </select>
                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span>
                    <label>
                        开始时间:
                    </label>
                    @Html.Telerik().DatePicker().Name("startTime").ClientEvents(c => c.OnChange("onChange")).HtmlAttributes(new { style = "width:150px" })
                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>
                    <label>
                        结束时间:
                    </label>
                    @Html.Telerik().DatePicker().Name("endTime").ClientEvents(c => c.OnChange("onChange")).HtmlAttributes(new { style = "width:150px" })
                </span>
        </text>)).DataKeys(keys => { keys.Add(p => p.ID); }).DataBinding(dataBinding =>
             {
                 dataBinding.Ajax().Select("_CompanyIndex",
                     "Research", new { month = Model.Month }).Update("_CompanyIndexEdit", "Research", new { projectid = ViewBag.projectid });
             }).Columns(columns =>
             {
                 columns.Bound(p => p.CompanyName);
                 columns.Bound(p => p.CompanyContact);
                 //columns.Bound(p => p.CompanyDesicription);
                 columns.Bound(p => p.Creator);
                 columns.Bound(p => p.CreateDate).Format("{0:d}");
                 columns.Bound(p => p.LeadCount);
                 columns.Bound(p => p.CompanyReviews).HtmlAttributes(new { name = "CompanyReviews" });
                 columns.Bound(p => p.IsValid);
                 columns.Command(c => c.Edit().ButtonType(GridButtonType.Image)).Title("有效确认").Width(150);
             }).ClientEvents(events => events.OnDataBinding("companyDataBinding")

                                                 .OnRowDataBound("rowDataBound").OnComplete("onCompanyComplete")
         ).DetailView(details
                    => details.ClientTemplate(Html.Telerik().TabStrip().Name("TabStrip_<#= ID #>")
                    .ClientEvents(events => events
                        .OnLoad("onLoad"))
                    .SelectedIndex(0).Items(items =>
                    {
                        items.Add().Text("共<#= LeadCount #>个Lead").Content(Html.Telerik().Grid<_LeadResearchDetail>()
                            .Name("Grid<#= ID #>")
                            .DataKeys(keys => { keys.Add(p => p.ID); })
                            .Columns(columns =>
                            {
                                columns.Bound(l => l.LeadName);
                                columns.Bound(l => l.LeadTitle);
                                columns.Bound(l => l.LeadContact);
                                columns.Bound(l => l.LeadMobile);
                                columns.Bound(l => l.Email);
                                columns.Bound(l => l.Creator);
                                columns.Bound(l => l.CreateDate).Format("{0:d}");
                                columns.Bound(l => l.IsValid);
                                columns.Command(c => c.Edit().ButtonType(GridButtonType.Image)).Title("有效确认").Width(150);
                            })
                            .DataBinding(dataBinding =>
                            {
                                dataBinding.Ajax().Select("_LeadIndex", "Research", new { companyid = "<#= ID #>" })
                                      .Update("_LeadIndexEdit", "Research", new { companyid = "<#= ID #>" });
                            })

                            .Editable(editing => editing.Mode(GridEditMode.PopUp))
                            .Pageable(p => p.Style(GridPagerStyles.Status).PageSize(50).PageOnScroll(true)).Scrollable().Sortable().Resizable(r => r.Columns(true)).ToHtmlString());
                        items.Add().Text("公司简介").Content(
                             "<div id=Description_<#= ID #> style='height:250px'>" +
                          "<#= Description #>" +
                        "</div>");
                    }).ToHtmlString())).Editable(editing => editing.Mode(GridEditMode.PopUp))
    .Pageable(p => p.Style(GridPagerStyles.Status).PageSize(50).PageOnScroll(true)).Scrollable(scrolling
    => scrolling.Height(400)).Sortable().Resizable(r => r.Columns(true)))
    </fieldset>
}
<fieldset>
    <legend>@Model.Month 月项目调研情况</legend>
    @(Html.Telerik().Grid<_ProjectResearch>().Name("Grid")
.DataKeys(keys => { keys.Add(p => p.ID); })
.DataBinding(dataBinding =>
{
    dataBinding.Ajax().Select("_ProjectResearchIndex", "Research", new { month = Model.Month });
})
.Columns(columns =>
{
    columns.Bound(p => p.ProjectName).ClientFooterTemplate("总计");
    columns.Bound(p => p.MemberCount).Width(60);
    columns.Bound(p => p.FirstWeekCompanyCount).Title(Model.DurationStrings[0] + " 公司添加数").Aggregate(a => a.Sum()).ClientFooterTemplate("<#= Sum #>");
    columns.Bound(p => p.SecondWeekCompanyCount).Title(Model.DurationStrings[1] + " 公司添加数").Aggregate(a => a.Sum()).ClientFooterTemplate(" <#= Sum #>");
    columns.Bound(p => p.ThirdWeekCompanyCount).Title(Model.DurationStrings[2] + " 公司添加数").Aggregate(a => a.Sum()).ClientFooterTemplate(" <#= Sum #>");
    columns.Bound(p => p.FourthWeekCompanyCount).Title(Model.DurationStrings[3] + " 公司添加数").Aggregate(a => a.Sum()).ClientFooterTemplate(" <#= Sum #>");
    if (Model.DurationStrings.Count == 5)
    {
        columns.Bound(p => p.FivethWeekCompanyCount).Title(Model.DurationStrings[4]);
    }
    columns.Command(command => command.Custom("viewprojectDetails").Text("调研查看").DataRouteValues(route => route.Add(o => o.ProjectID).RouteKey("UserName")).Ajax(true)).HtmlAttributes(new { style = "text-align: center" }).Width(150).Title("操作");

})
.Pageable(p => p.Style(GridPagerStyles.Status).PageSize(50)
.PageOnScroll(true)).Scrollable().Sortable().Groupable().Resizable(r => r.Columns(true))
.ClientEvents(events => events.OnCommand("onProjectDetails"))
)
</fieldset>
<fieldset>
    <legend>@Model.Month 月员工调研情况</legend>
    @(Html.Telerik().Grid<_UserResearch>().Name("_UserResearch")
.DataKeys(keys => { keys.Add(p => p.ID); })
.DataBinding(dataBinding =>
{
    dataBinding.Ajax().Select("_UserResearchIndex", "Research", new { month = Model.Month });
})
.Columns(columns =>
{
    columns.Bound(p => p.UserName).ClientFooterTemplate("总计"); ;
    if (Model.DurationStrings.Count == 5)
    {
        columns.Bound(p => p.FivethWeekCompanyCount).Title(Model.DurationStrings[4]);
    }
    columns.Bound(p => p.FirstWeekLeadCount).Title(Model.DurationStrings[0] + " Lead添加数");
    columns.Bound(p => p.SecondWeekLeadCount).Title(Model.DurationStrings[1] + " Lead添加数");
    columns.Bound(p => p.ThirdWeekLeadCount).Title(Model.DurationStrings[2] + " Lead添加数");
    columns.Bound(p => p.FourthWeekLeadCount).Title(Model.DurationStrings[3] + " Lead添加数");
    if (Model.DurationStrings.Count == 5)
    {
        columns.Bound(p => p.FirstWeekLeadCount).Title(Model.DurationStrings[4]);
    }

    columns.Command(command => command.Custom("viewUserDetails").Text("调研查看").DataRouteValues(route => route.Add(o => o.UserName).RouteKey("UserName")).Ajax(true)).HtmlAttributes(new { style = "text-align: center" }).Width(150).Title("操作");

})
.Pageable(p => p.Style(GridPagerStyles.Status).PageSize(50)
.PageOnScroll(true)).Scrollable().Sortable().Groupable().Resizable(r => r.Columns(true)).Filterable()
.ClientEvents(events => events.OnCommand("onUserDetails").OnRowDataBound("onDetailLoad"))
)
</fieldset>
@(Html.Telerik().Window().Name("DetailsWindow").Visible(false).Title("调研列表").Modal(true).Width(900).Height(610).Content(@<text>

@DetailList()
</text>).Resizable().Draggable(true)
)
@helper DetailList()
    {
        <div><span>
                <label>
                        开始时间:
                    </label>
                    @Html.Telerik().DatePicker().Name("startT").ClientEvents(c => c.OnChange("onTimeChange")).HtmlAttributes(new { style = "width:150px" })
                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>
                    <label>
                        结束时间:
                    </label>
                    @Html.Telerik().DatePicker().Name("endT").ClientEvents(c => c.OnChange("onTimeChange")).HtmlAttributes(new { style = "width:150px" })
                </span>
    <span id="salecontainer"></span>
    <label>
        销售筛选:
    </label>
    <select id="saleselect" name="saleselect" onchange="sdlOnChange()">
    </select></div>
    @(Html.Telerik().Grid<_UserResearchDetail>().Name("DetailsGrid")
        .DataBinding(dataBinding =>
        {
            dataBinding.Ajax().Select("_UserResearchList", "Research");
        })
         .ClientEvents(events => events.OnDataBinding("dataBinding"))
        @*.ToolBar(toolBar => toolBar.Template(
                @<text> <span>
                <label>
                        开始时间:
                    </label>
                    @Html.Telerik().DatePicker().Name("startT").ClientEvents(c => c.OnChange("onTimeChange")).HtmlAttributes(new { style = "width:150px" })
                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>
                    <label>
                        结束时间:
                    </label>
                    @Html.Telerik().DatePicker().Name("endT").ClientEvents(c => c.OnChange("onTimeChange")).HtmlAttributes(new { style = "width:150px" })
                </span>
    <span id="salecontainer"></span>
    <label>
        销售筛选:
    </label>
    <select id="saleselect" name="saleselect" onchange="sdlOnChange()">
    </select>
    </text>)
        )*@
        .Columns(columns =>
        {
            columns.Bound(p => p.CompanyName);
            columns.Bound(p => p.LeadName).Width(100);
            columns.Bound(p => p.LeadTitle).Width(100);
            columns.Bound(p => p.HideCompanyContact).Width(80);
            columns.Bound(p => p.HideLeadContact).Width(80);
            columns.Bound(p => p.HideLeadMobile).Width(80);
            columns.Bound(p => p.CreateDate).Title("创建时间");
            columns.Bound(p => p.Creator);
            columns.Bound(p => p.Categoris);

        })
        .DetailView(details => details.ClientTemplate("<#= CompanyDesicription #>"))
        .Pageable(p => p.Style(GridPagerStyles.Status).PageSize(100)
        .PageOnScroll(true)).Scrollable().Sortable().Groupable().Resizable(r => r.Columns(true))
        .Scrollable(scrolling => scrolling.Height(500))
      )  
}
<input id="detailtype" type="hidden" />
<input id="detailname" type="hidden" />
<input id="username" type="hidden" value=@Utl.Employee.CurrentUserName />
<script type="text/javascript">
    var clicked = false;
    function selectChange(e) {
        if (e == true) {
            $("#selectSales").empty();
            var id = $("#selectProject").val();
            $.post('MemberSelectList', { projectId: id }, function (result) {
                $("#selectSales").each(function () {
                    var dropdownList = this;
                    $.each(result, function (key, item) {
                        var option = new Option(item.Text, item.Value);
                        dropdownList.add(option);
                    });
                });
            }, 'json');
        }
        $("#GridCompany").data("tGrid").rebind();

    }

    function onChange(e) {
        $("#GridCompany").data("tGrid").rebind();
    }

    function companyDataBinding(e) {
        var selecttype = $("#selectType").val();
        var selsales = $("#selectSales").val();
        var project = $("#selectProject").val();
        var selStartTime = $("#startTime").val();
        var selEntTime = $("#endTime").val();
        e.data = $.extend(e.data, { projectid: project, sales: selsales, seltype: selecttype, starttime: selStartTime, endtime: selEntTime });
    }


    function dw() {
        return $("#DetailsWindow").data("tWindow");
    }

    function dg() {
        return $('#DetailsGrid').data('tGrid');
    }

    function ddl() {
        return $('#durationselect');
    }

    function sdl() {
        return $('#saleselect');
    }

    function onDetailLoad(e) {
        if ($(e.row).children().first().text() != currentuser) {
            $(e.row).children().last().find('a').hide();
        }

    }
    var currentuser;
    $(document).ready(function () {

        currentuser = $('#username').val();

//        ddl().bind('change', function () {
//            var duration = ddl().val();
//            var saleVal = sdl().val();
//            var d = dg();

//            var type = $("#detailtype").val();
//            var name = $("#detailname").val();
//            dg().ajaxRequest({ name: name, type: type, duration: duration, sale: saleVal });

//        });
    });

    function sdlOnChange() {
//        var saleVal = sdl().val();
//        //var duration = ddl().val();
//        var starttime = $("#startT").val();
//        var endtime = $("#endT").val();
//        var d = dg();

//        var type = $("#detailtype").val();
//        var name = $("#detailname").val();
        dg().rebind();
//        dg().ajaxRequest({ name: name, type: type, starttime: starttime,endtime:endtime, sale: saleVal });
    }
    function onTimeChange() {
//        var saleVal = sdl().val();
//        //var duration = ddl().val();
//        var starttime = $("#startT").val();
//        var endtime = $("#endT").val();
//        var d = dg();

//        var type = $("#detailtype").val();
//        var name = $("#detailname").val();
        dg().rebind();
        //dg().ajaxRequest({ name: name, type: type, starttime: starttime, endtime: endtime, sale: saleVal });
    }
    function dataBinding(e) {
//        if (clicked) {
        var saleVal = sdl().val();
        if (saleVal == null)
            saleVal = '';
            //var duration = ddl().val();
            var starttime = $("#startT").val();
            var endtime = $("#endT").val();
            var d = dg();

            var type = $("#detailtype").val();
            var name = $("#detailname").val();
            e.data = $.extend(e.data, { name: name, type: type, starttime: starttime, endtime: endtime, sale: saleVal });
//        }
//        else
//            e.preventDefault();

    }
    function onUserDetails(e) {
        clicked = true;
        resetddl();
        var user = e.dataItem.UserName;
        var d = dg();
        setdetailselections(user, 'user');
//        dg().ajax.selectUrl = "/Research/_UserResearchList/?name=" + user + "&type=user";

        //        dg().ajaxRequest({ name: user, type: 'user' });
        dg().rebind();
        dw().center().open();
    }

    function onProjectDetails(e) {
        clicked = true;
        resetddl();
        resetsdl();
        var id = e.dataItem.ProjectID;
        var d = dg();

        $.post('MemberInPorject', { projectId: id }, function (result) {
            $("#saleselect").empty();
            $("#saleselect").each(function () {
                var dropdownList = this;
                $.each(result, function (key, item) {
                    var option = new Option(item.Text, item.Value);
                    dropdownList.add(option);
                });
            });
        }, 'json');

        setdetailselections(id, 'project');

//        dg().ajax.selectUrl = "/Research/_UserResearchList/?name=" + id + "&type=project";
//        dg().ajaxRequest({ name: id, type: 'project' });
        dg().rebind();
        dw().center().open();
        
    }
    //重设ddl
    function resetddl() {
        ddl().val('0');
    }
    //重设ddl
    function resetsdl() {
        sdl().val('0');
    }
    //保存details配置
    function setdetailselections(name, type) {
        $('#detailtype').val(type);
        $('#detailname').val(name);
    }

    function onLoad(e) {
        //if (e.target.lastChild.innerText == "" || e.target.lastChild.contentText == "") {
        var id = e.target.id;
        var b = id.replace(/TabStrip_/, "");
        if ($("#Description_" + b).text() == "") {

            var tabstrip = $("#" + id).data("tTabStrip");
            var item = $("li", tabstrip.element)[1];
            //tabstrip.disable(item);
            item.parentNode.removeChild(item);
        }
    }

    function rowDataBound(e) {
        var data = e.dataItem.CompanyReviews;
        if ((data != null && data.length >= 10)) {
            $(e.row).find('[name]').text(data.substring(0, 10) + "...");
        }
    }
    function onCompanyComplete(e) {
        if (e.name == "update") {
            $("#GridCompany").data("tGrid").rebind();
        }
    }
</script>
