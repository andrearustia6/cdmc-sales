@using Model
@using Utl
@using Entity
@model AjaxCRM
@{
    string guidFormName = Guid.NewGuid().ToString("N");
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    function editCompany() {
        var window = $('#@(guidFormName)').data('tWindow');
        window.center().open();
    }
    function cancelEditcompany() {
        var window = $('#@(guidFormName)').data('tWindow');
        window.close();
    }
    function updatecompany() {
        $('#@(guidFormName) .companyEditForm input').removeClass('fieldError');
        $('#@(guidFormName) .companyEditForm select').removeClass('fieldError');
        String.prototype.isEmpty = function () { return /^\s*$/.test(this); }
        var hasError = false;
        if ($('#@(guidFormName) .companyEditForm #CompanyNameCH').val().isEmpty()) {
            $('#@(guidFormName) .companyEditForm #CompanyNameCH').addClass('fieldError');
            hasError = true;
        }
        if ($('#@(guidFormName) .companyEditForm #DistrictNumberID option:selected').val().isEmpty()) {
            if ($('#@(guidFormName) .companyEditForm #ZipCode').val().isEmpty()) {
                $('#@(guidFormName) .companyEditForm #ZipCode').addClass('fieldError');
                hasError = true;
            }
            if ($('#@(guidFormName) .companyEditForm #Address').val().isEmpty()) {
                $('#@(guidFormName) .companyEditForm #Address').addClass('fieldError');
                hasError = true;
            }
        }
        if ($('#@(guidFormName) .companyEditForm #ProgressID option:selected').val().isEmpty()) {
            $('#@(guidFormName) .companyEditForm #ProgressID').addClass('fieldError');
            hasError = true;
        }
        if (hasError) {
            return;
        }
      
        var currentCompanyName = $('#currentCompanyName').html();
        var companyName = $('#@(guidFormName) .updateName').val();
        $.post('CheckCompanyExist', { beforeUpdate: currentCompanyName, afterUpdate: companyName }, function (result) {
            if (result.length > 0) {
                alert(result);
            } else {
                var query = $('#@(guidFormName) .companyEditForm').serialize();
                $.post('EditSaleCompany?' + query, null, function (result) {
                    if (result.length > 0) {
                        alert(result);

                    } else {
                        var tempVal = '';
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyNameCH').val();
                        $('#currentCompanyName').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyNameEN').val();
                        $('#currentCompanyNameEN').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #DistrictNumberID option:selected').text();
                        $('#currentCompanyDistrictNumberString').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyContact').val();
                        $('#currentCompanyContact').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyFax').val();
                        $('#currentCompanyFax').html(tempVal);
                        tempVal = '';
                        $('#@(guidFormName) .companyEditForm input[type=checkbox]:checked').each(function () {
                            tempVal += $(this).prev().html() + ',';
                        });
                        if (tempVal.length > 0) {
                            tempVal = tempVal.substr(0, tempVal.length - 1);
                        }
                        $('#currentCompanyCategoryStrings').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #ProgressID option:selected').text();
                        $('#currentProgressString').html(tempVal);
                        var window = $('#@(guidFormName)').data('tWindow');
                        window.close();
                        alert('公司更新成功');
                    }
                });
            }
        });

    }
</script>
@if (Model != null)
{
    Html.Telerik().Splitter().Name("sp2").HtmlAttributes(new { style = "min-height: 790px;" })
               .Orientation(SplitterOrientation.Vertical).Panes(panes =>
               {
                   panes.Add().Size("20%").Content(@<text>@CompanyInfo(guidFormName)</text>);
                   panes.Add().Content(@<text>@LeadsInfo()</text>);
               }).Render();
}
@helper CompanyInfo(string guidFormName)
    {
    <input type="button" style="margin: 10px; padding: 5px 10px;" value="更新" onclick="editCompany()" />
    <fieldset class="fieldblock">
        <legend>@Model.CompanyName</legend>
        <dl>
            <dt style="font-size: 13px;">公司信息:</dt>
            <dd class="fieldname">
                <div>
                    <font>中文名：</font><span id="currentCompanyName">@Model.CompanyNameCH</span></div>
                <div>
                    <font>英文名：</font><span id="currentCompanyNameEN">@Model.CompanyNameEN</span></div>
                <div>
                    <font>区号：</font><span id="currentCompanyDistrictNumberString">@Model.CompanyDistrictNumberString</span></div>
                <div>
                    <font>公司总机：</font><span id="currentCompanyContact">@Model.CompanyContact</span></div>
                <div>
                    <font>传真：</font><span id="currentCompanyFax">@Model.CompanyFax</span></div>
                <div>
                    <font>细分行业：</font><span id="currentCompanyCategoryStrings">@Model.CompanyCategoryStrings</span>
                </div>
                <div>
                    <font>成熟度：</font><span id="currentProgressString">@Model.ProgressString </span>
                </div>
            </dd>
        </dl>
    </fieldset>
    @(Html.Telerik().Window().Title("更新公司")
            .Name(guidFormName)
    .Buttons(buttons => buttons.Close())
    .Content(@<text><div class="dialogue-editcompany">
        <div class="companyEdit-wrapper">
            <form action="/SalesEx/EditSaleCompany" data-ajax="true" data-ajax-mode="replace"
            data-ajax-update="ajax-holder" class="companyEditForm" method="post">
            @Html.HiddenFor(model => model.ProjectID)
            @Html.HiddenFor(model => model.CompanyID)
            <ul>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.CompanyNameCH) @Html.TextBoxFor(model => model.CompanyNameCH, new { @class = "updateName" })
                    @Html.ValidationMessageFor(model => model.CompanyNameCH)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.CompanyNameEN) @Html.TextBoxFor(model => model.CompanyNameEN)
                        @Html.ValidationMessageFor(model => model.CompanyNameEN)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.AreaID) @Html.DropDownListFor(model => model.AreaID, SelectHelper.CompanyIndustrySelectList(null), "请选择", new { })
                    @Html.ValidationMessageFor(model => model.AreaID)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.CompanyTypeID) @Html.DropDownListFor(model => model.CompanyTypeID, SelectHelper.CompanyTypeSelectList(null), "请选择", new { })
                        @Html.ValidationMessageFor(model => model.CompanyTypeID)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.CompanyContact) @Html.TextBoxFor(model => model.CompanyContact)
                    @Html.ValidationMessageFor(model => model.CompanyContact)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.CompanyFax) @Html.TextBoxFor(model => model.CompanyFax)
                        @Html.ValidationMessageFor(model => model.CompanyFax)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.ZipCode) @Html.TextBoxFor(model => model.ZipCode)
                    @Html.ValidationMessageFor(model => model.ZipCode)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.WebSite) @Html.TextBoxFor(model => model.WebSite)
                        @Html.ValidationMessageFor(model => model.WebSite)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.Address) @Html.TextBoxFor(model => model.Address)
                    @Html.ValidationMessageFor(model => model.Address)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.DistrictNumberID) @Html.DropDownListFor(model => model.DistrictNumberID, SelectHelper.DistinctNumberSelectList(null), "请选择", new { })
                        @Html.ValidationMessageFor(model => model.DistrictNumberID)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.ProgressID) @Html.DropDownListFor(model => model.ProgressID, SelectHelper.ProgressSelectList(null), "请选择", new { })
                    @Html.ValidationMessageFor(model => model.ProgressID)</span> </li>
                <li><span>@Html.LabelFor(model => model.Business) @Html.TextAreaFor(model => model.Business)
                    @Html.ValidationMessageFor(model => model.Business)</span> </li>
                <li><span>@Html.LabelFor(model => model.Desc) @Html.TextAreaFor(model => model.Desc)
                    @Html.ValidationMessageFor(model => model.Desc)</span> </li>
                <li class="companyCategory">
                    <fieldset>
                        <legend>Categories</legend>
                        @foreach (Category category in CH.GetAllData<Category>(c => c.ProjectID == Model.ProjectID))
                        { 
                            <label class="company-category">@category.Name</label>
                            if (Model.Categories.Contains(category.ID))
                            {
                            <input  name="Categories" type="checkbox" value="@category.ID" checked="checked" />
                            }
                            else
                            { 
                            <input  name="Categories" type="checkbox" value="@category.ID"/>
                            }
                        }
                    </fieldset>
                </li>
            </ul>
            </form>
        </div>
        <div class="dialogue-buttons">
            <input type="button" value="确定" class="t-button" onclick="updatecompany()" />
            <input type="button" value="取消" class="t-button" onclick="cancelEditcompany()" />
        </div>
    </div></text>)
    .Width(750)
    .Height(680)
    .Modal(true).Visible(false)
)
}
@helper LeadsInfo()
    {
    <dl>
        @foreach (var lead in Model.AjaxLeads)
        {
            <fieldset>
                <dt style="font-size: 13px; margin: 5px;">@lead.DisplayText</dt>
                <dd class="fieldname">
                    <div>
                        <font>中文名：</font>@lead.LeadNameCH
                    </div>
                    <div>
                        <font>英文名：</font>@lead.LeadNameEN
                    </div>
                    <div>
                        <font>Lead职位：</font>@lead.LeadTitle
                    </div>
                    <div>
                        <font>Lead性别：</font>@lead.Gender
                    </div>
                    <div>
                        <font>客户区号：</font>@lead.LeadDistinctNumberString
                    </div>
                </dd>
                <dt style="font-size: 13px;">联系方式</dt>
                <dd class="fieldname">
                    <div>
                        <font>公司邮箱：</font>@lead.LeadEmail
                    </div>
                    <div>
                        <font>个人邮箱：</font>@lead.LeadPersonalEmail
                    </div>
                    <div>
                        <font>直线：</font>@lead.LeadContact
                    </div>
                    <div>
                        <font>手机：</font>@lead.LeadMobile
                    </div>
                    <div>
                        <font>传真：</font>@lead.LeadFax
                    </div>
                    <div>
                        <font>微博账号：</font>@lead.WeiBo
                    </div>
                    <div>
                        <font>微信账号：</font>@lead.WeiXin
                    </div>
                    <div>
                        <font>LinkIn账号：</font>@lead.LinkIn
                    </div>
                    <div>
                        <font>FaceBook账号：</font>@lead.FaceBook
                    </div>
                    <div>
                        <font>传真：</font>@lead.LeadFax
                    </div>
                    <div>
                        <font>博客地址：</font>@lead.Blog
                    </div>
                </dd>
                <dt style="font-size: 13px;">描述</dt>
                <dd class="fieldname">
                    <div>
                        <font></font>
                    </div>
                </dd>
                <dt style="font-size: 13px;">致电列表</dt>
                <dd>
                    @(Html.Telerik().Grid<AjaxCall>(lead.AjaxCalls.OrderByDescending(o => o.CallDate)).Name("lead" + lead.LeadID)
                    .Columns(columns =>
                    {
                        columns.Bound(o => o.CallType).Width(80);
                        columns.Bound(o => o.CallBackDate).Width(100);
                        columns.Bound(o => o.CallDate).Width(100);
                        columns.Bound(o => o.Caller).Width(80);
                        columns.Bound(o => o.Result);
                    })
                    .Pageable(paging => paging.Enabled(false)).Resizable(resizing => resizing.Columns(true))
                    .Sortable().Scrollable(scrolling => scrolling.Enabled(false))
                    .Filterable()
        )
                </dd>
            </fieldset>
        }
    </dl>
}
<style>
    .fieldblock
    {
    }
    .fieldname div
    {
        padding: 2px;
        min-width: 100px;
        background-color: #FFDEAD;
        border-bottom-color: #FF8C00;
        border: 1px solid #CCC;
        display: inline-block;
        margin-left: 8px;
        margin-bottom: 8px;
    }
    .fieldname div font
    {
        font-size: 12px;
        color: Green;
    }
    
    .fieldError
    {
        border: 1px solid red !important;
    }
</style>
