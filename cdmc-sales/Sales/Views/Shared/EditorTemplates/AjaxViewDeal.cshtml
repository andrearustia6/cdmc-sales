@using Utl
@using Entity
@model Model.AjaxViewDeal
<fieldset>
    @{if (Employee.CurrentRole.Level == 4)
      {
        <legend>请填写实际付款日期和实际入账金额</legend>
        <div style="padding: 0px 3px 0px 3px; margin: 3px">
            <table>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CompanyName)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CompanyName, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ProjectCode)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ProjectCode, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.DealCode)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.DealCode, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PackageName)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.PackageName, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Committer)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Committer, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CommitterContect)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CommitterContect, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CommitterEmail)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CommitterEmail, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IsConfirm)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IsConfirm, new { @readOnly = "true", style = "width:300px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TicketDescription)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.TicketDescription, new { @readOnly = "true", style = "width:300px" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Payment)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.Telerik().CurrencyTextBoxFor(model => model.Payment).Enable(false)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ExpectedPaymentDate)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.Telerik().DatePickerFor(model => model.ExpectedPaymentDate).Enable(false)
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PaymentDetail)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.PaymentDetail, new { @readOnly = "true", style = "width:300px" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ActualPaymentDate)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.Telerik().DatePickerFor(model => model.ActualPaymentDate)
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Income)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.Telerik().CurrencyTextBoxFor(model => model.Income)
                        </div>
                    </td>
                </tr>
            </table>
        </div>
      }
      else
      { 
        <legend>请确认出单</legend>
        <div style="padding: 0px 3px 0px 3px; margin: 3px">
            <table border="0" cellpadding="0" style=" width:100%;">
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CompanyName)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CompanyName, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ProjectCode)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ProjectCode, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.DealCode)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.DealCode, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PackageName)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.PackageName, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Committer)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Committer, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CommitterContect)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CommitterContect, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CommitterEmail)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CommitterEmail, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IsConfirm)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.IsConfirm, new { @readOnly = "true", style = "width:180px;border-style: none" })
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TicketDescription)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.TicketDescription, new { @readOnly = "true", style = "width:180px" })
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Payment)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.Telerik().CurrencyTextBoxFor(model => model.Payment).Enable(false)
                        </div>
                    </td>
                </tr>
                <tr>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ExpectedPaymentDate)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.Telerik().DatePickerFor(model => model.ExpectedPaymentDate).Enable(false)
                        </div>
                    </td>
                    <td style="width:50px;">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PaymentDetail)
                        </div>
                    </td>
                    <td>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.PaymentDetail, new { @readOnly = "true", style = "width:180px" })
                        </div>
                    </td>
                </tr>
            </table>
        </div>
      }
    }
</fieldset>
