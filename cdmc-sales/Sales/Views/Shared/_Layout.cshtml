@using Utl
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    @* <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />*@
    @(Html.Telerik().StyleSheetRegistrar().DefaultGroup(group => group.Add("telerik.common.css").Add("telerik.telerik.css").Combined(true).Compress(true)))
    <script type="text/javascript" src=@Url.Content(@"/scripts/jquery-1.6.4.min.js")></script>@*确保在页面能引用到jquery*@
    <script type="text/javascript" src=@Url.Content(@"~/vjs/view.js")></script>@*确保在页面能引用到jquery*@
</head>
<body>
    <div class="page">
        <header>
			<div id="title">
            <center>
				<h1>决策者</h1>
                </center>
			</div>

			
		</header>
        <div>
            @Html.ActionLink("[关于]", "Index", "About", null, new { style = "float:right;margin-top:-20px;margin-right:50px;color: #FFFFFF;text-decoration: none;z-index:1000;" })
            @Html.ActionLink("[退出]", "LogOff", "Account", null, new { style = "float:right;margin-top:-20px;color: #FFFFFF;text-decoration: none;z-index:1000;" })
            @{ Html.Telerik().Menu().Name("Menu1").Items(menu =>
               {
                   if (Employee.AsDirector())
                   {
                       menu.Add().Text("类型字典管理").ImageUrl("~/Content/Common/Icons/mvc.png").Items(item =>
                       {
                           item.Add().Text("行业").Url("~/Category/index").ImageUrl("~/Content/Common/Icons/Scheduler.png");
                           item.Add().Text("货币").Url("~/CurrencyType/index").ImageUrl("~/Content/Common/Icons/GridView.gif");
                           item.Add().Text("职位").Url("~/Title/index").ImageUrl("~/Content/Common/Icons/Scheduler.gif");
                           item.Add().Text("公司").Url("~/CompanyType/index").ImageUrl("~/Content/Common/Icons/Grid.png");
                           item.Add().Text("Lead").Url("~/LeadType/index").ImageUrl("~/Content/Common/Icons/Menu.png");
                           item.Add().Text("LeadSheet").Url("~/LeadSheetType/index").ImageUrl("~/Content/Common/Icons/Docking.gif");
                           item.Add().Text("Package服务").Url("~/PackageServiceType/index").ImageUrl("~/Content/Common/Icons/GridView.gif");
                           item.Add().Text("Package").Url("~/PackageType/index").ImageUrl("~/Content/Common/Icons/Editor.png");
                           item.Add().Text("付款").Url("~/Paymenttype/index").ImageUrl("~/Content/Common/Icons/TabStrip.png");
                           item.Add().Text("参会").Url("~/ParticipantType/index").ImageUrl("~/Content/Common/Icons/Chart.gif");
                           item.Add().Text("模板").Url("~/TemplateType/index").ImageUrl("~/Content/Common/Icons/TabStrip.png");
                           item.Add().Text("Block").Url("~/OnPhoneBlockType/index").ImageUrl("~/Content/Common/Icons/TabStrip.png");
                       });
                       menu.Add().Text("配置").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                      {
                           item.Add().Url("~/DistrictNumber/index").Text("区号管理").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       });
                   }

                   menu.Add().Text("员工信息").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                   {
                       item.Add().Url("~/Account/index").Text("账号管理").ImageUrl("~/Content/Common/Icons/Docking.gif");
                   });
                   menu.Add().Text("项目管理").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                   {
                       item.Add().Url("~/Project/index").Text("项目WIKI").ImageUrl("~/Content/Common/Icons/Docking.gif");
                   });
                   menu.Add().Text("工作任务").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                   {
                       item.Add().Url("~/Research/index").Text("调研上传").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       item.Add().Url("~/Company/index").Text("项目公司").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       item.Add().Url("~/Lead/index").Text("项目客户").ImageUrl("~/Content/Common/Icons/Docking.gif");
                   });
                   menu.Add().Text("个人主页").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                   {
                       item.Add().Url("~/Project/index").Text("工作页面").ImageUrl("~/Content/Common/Icons/Docking.gif");
                   });
                   menu.Add().Text("客户管理").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                   {
                       item.Add().Url("~/Company/index").Text("公司").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       item.Add().Url("~/Lead/index").Text("客户").ImageUrl("~/Content/Common/Icons/Docking.gif");

                   });
                   menu.Add().Text("会议管理").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                   {
                       item.Add().Url("~/Conference/index").Text("会议信息").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       item.Add().Url("~/Company/index").Text("参会嘉宾").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       item.Add().Url("~/Conference/index").Text("Package").ImageUrl("~/Content/Common/Icons/Docking.gif");

                   });
                   if (Employee.AsManager())
                   {
                       menu.Add().Text("模板管理").ImageUrl("~/Content/Common/Icons/GridView.gif").Items(item =>
                       {
                           item.Add().Url("~/Template/index").Text("通用模板").ImageUrl("~/Content/Common/Icons/Editor.png");
                           item.Add().Url("~/LeadSheet/index").Text("致电结果").ImageUrl("~/Content/Common/Icons/Docking.gif");
                           item.Add().Url("~/OnPhoneTemplate/index").Text("话术").ImageUrl("~/Content/Common/Icons/Docking.gif");
                       });
                   }


               }).Render();}
            <section id="main">@RenderBody()</section>
        </div>
        <footer>
		</footer>
    </div>
    @(Html.Telerik().ScriptRegistrar().Globalization(true).DefaultGroup(group => group.Combined(true).Compress(true)))</body>
</html>
