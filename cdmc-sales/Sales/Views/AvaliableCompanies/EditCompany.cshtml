@using Entity
@model Model.AjaxViewSaleCompany

@using (Html.BeginForm("EditSaleCompany", "Sales"))
{
    @Html.HiddenFor(model => model.ProjectId)
    @Html.HiddenFor(model => model.CompanyId)
    @Html.HiddenFor(model => model.CompanRelationshipId)
    <fieldset>
        <legend>公司信息</legend>
       <table>
            <tr>
                <td colspan="2">
                    @Html.LabelFor(model => model.Name_CN)
                   
                    @{ 
                        if (Utl.Employee.CurrentRole.Level == ManagerRequired.LVL)
                        {
                                @Html.TextBoxFor(model => model.Name_CN, new { @style = "width:300px" })
                                @Html.LabelFor(model => model.IsVIP)
                                @Html.CheckBoxFor(model => model.IsVIP)
                        }
                        else
                        {
                             @Html.TextBoxFor(model => model.Name_CN, new { @style = "width:370px" })
                             @Html.HiddenFor(model => model.IsVIP)
                        }
                    }
                </td>
                <td >
                    @Html.LabelFor(model => model.Name_EN)
                    @Html.TextBoxFor(model => model.Name_EN)
                </td>
                 <td>
                    @Html.LabelFor(model => model.CoreLVLID)
                    @Html.DropDownListFor(model => model.CoreLVLID, Utl.SelectHelper.CoreLVLSelectList(null), "请选择", new { })
                </td>
            </tr>

                <tr>
                <td>
                    @Html.LabelFor(model => model.Phone)
                    @Html.TextBoxFor(model => model.Phone)
                </td>
                <td>
                    @Html.LabelFor(model => model.Fax)
                    @Html.TextBoxFor(model => model.Fax)
                </td>
                <td colspan="2">
                    @Html.LabelFor(model => model.WebSite)
                    @Html.TextBoxFor(model => model.WebSite, new { @style = "width:370px" })
                </td>
            </tr>
               <tr>
                <td colspan="2">
                    @Html.LabelFor(model => model.IndustryId)
                    @Html.DropDownListFor(model => model.IndustryId, Utl.SelectHelper.CompanyIndustrySelectList(null), "请选择", new { @style = "width:370px" })
                </td>
                <td>
                    @Html.LabelFor(model => model.TypeId)
                    @Html.DropDownListFor(model => model.TypeId, Utl.SelectHelper.CompanyTypeSelectList(null), "请选择", new { })
                </td>
                <td>
                    @Html.LabelFor(model => model.ProgressId)
                    @Html.DropDownListFor(model => model.ProgressId, Utl.SelectHelper.ProgressSelectList(null), "请选择", new { })
                </td>
            </tr>
         
              
            <tr>
                <td>
                    @Html.LabelFor(model => model.DistrictNumberId)
                    @Html.DropDownListFor(model => model.DistrictNumberId, Utl.SelectHelper.DistinctNumberSelectList(null), "中国(默认)", new { })
                </td>
                <td>
                    @Html.LabelFor(model => model.Province)
                    @Html.TextBoxFor(model => model.Province)
                </td>
                <td>
                    @Html.LabelFor(model => model.City)
                    @Html.TextBoxFor(model => model.City)
                </td>
                <td>
                    @Html.LabelFor(model => model.ZipCode)
                    @Html.TextBoxFor(model => model.ZipCode)
                </td>
            </tr>


        


       
            <tr>
                <td>
                    @Html.LabelFor(model => model.Scale)
                    @Html.DropDownListFor(model => model.Scale, Utl.SelectHelper.CompanyScaleSelectList(null), "请选择")
                </td>
                <td>
                    @Html.LabelFor(model => model.AnnualSales)
                    @Html.DropDownListFor(model => model.AnnualSales, Utl.SelectHelper.AnnualSaleSelectList(null), "请选择")
                </td>
                <td>
                    @Html.LabelFor(model => model.MainProduct)
                    @Html.TextBoxFor(model => model.MainProduct)
                </td>
                <td>
                    @Html.LabelFor(model => model.MainClient)
                    @Html.TextBoxFor(model => model.MainClient)
                </td>
            </tr>
              <tr>
                <td colspan="2">
                    @Html.LabelFor(model => model.Address)
                    @Html.TextBoxFor(model => model.Address, new { @style = "width:370px" })
                </td>
                <td colspan="2">
                    @Html.LabelFor(model => model.Address_EN)
                    @Html.TextBoxFor(model => model.Address_EN, new { @style = "width:370px" })
                </td>
            </tr>      
           @* <tr>
                <td colspan="4">
                    @Html.LabelFor(model => model.Desc)
                    @Html.TextAreaFor(model => model.Desc)
                </td>
            </tr>*@
            @if (Utl.Employee.CurrentRole.Level == MarketInterfaceRequired.LVL)
             {
                <tr>
                 <td colspan="4">
                 @Html.LabelFor(model => model.Info)
                    @Html.DropDownListFor(model => model.Info, Utl.SelectHelper.InfoSelectList(), "请选择")
                     @Html.TextAreaFor(model => model.InfoRemark)
                 </td>
               
                 </tr>
             }
            <tr>
                <td colspan="4">
                   @{Html.Telerik().PanelBar()
            .Name("PanelBarEdit")
            .HtmlAttributes(new { style = "width: 100%" })
            .Items(parent =>
            {
                parent.Add()
                    .Text("更多...")
                    .Content(@<text>
                        @Html.LabelFor(model => model.Desc)
                        
                        @Html.Telerik().EditorFor(model => model.Desc).Tools(tooles => tooles.Clear().FontColor().FontSize()).HtmlAttributes(new { style = "width: 900px; height: 450px;" }) 
                        
                      @*  公司主要客户
                        @Html.TextAreaFor(model => model.Customers)*@
                        主要竞争对手
                        @Html.TextAreaFor(model => model.Competitor)
                        电话pitch点
                        @Html.TextAreaFor(model => model.PitchedPoint)
                    </text>)
                    .Expanded(false);
            })
            .Render();
            }
                </td>
            </tr>  
             
        </table>

        <fieldset id="categories">
            <legend>细分行业 <span id="categoriesError">必须选择一项</span></legend>
            @foreach (Category category in Utl.CH.GetAllData<Category>(c => c.ProjectID == Model.ProjectId))
            { 
                    
                <label class="company-category">
                  @if (Model.Categories.Contains(category.ID))
                  {
                <input  name="Categories" type="checkbox" value="@category.ID" checked="checked" />
                  }
                  else
                  { 
                <input  name="Categories" type="checkbox" value="@category.ID"/>
                  }
              @category.Name </label>
              
            }
        </fieldset>
    </fieldset>
}
<style>
    table
    {
        border: none;
    }
    table tr td
    {
        width: 240px;
        border: none;
    }
    table tr td label
    {
        display: inline-block;
        width: 55px;
        padding-right: 5px;
    }
    table tr td input[type=text], table tr td select
    {
        width: 140px;
    }
    table tr td textarea
    {
        height: 100px;
    }
    #categoriesError
    {
        display: none;
    }
    fieldset.fieldError span
    {
        display: inline-block !important;
        color: Red;
    }
</style>
