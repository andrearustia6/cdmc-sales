@using Entity
@using Utl
@model Model.BulkEntry
@using (Html.BeginForm("AddSaleCompany", "SalesEx"))
{
    @Html.HiddenFor(model => model.ProjectId)
    <table>
        <tr>
            <td colspan="4">
                <span id="Msg" style="color: Red;"></span>
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.Name_CN)
                @Html.TextBoxFor(model => model.Name_CN)
            </td>
            <td>
                @Html.LabelFor(model => model.Name_EN)
                @Html.TextBoxFor(model => model.Name_EN)
            </td>
            <td>
                @Html.LabelFor(model => model.Phone)
                @Html.TextBoxFor(model => model.Phone)
            </td>
            <td>
                @Html.LabelFor(model => model.DistrictNumberId)
                @Html.DropDownListFor(model => model.DistrictNumberId, SelectHelper.DistinctNumberSelectList(null), "中国(默认)")
            </td>
        </tr>
        <tr>
            <td>
                @{
    if (Model.IndustryId != null)
    {
        @Html.LabelFor(model => model.IndustryId);
      
        @Html.DropDownListFor(model => model.IndustryId, SelectHelper.CompanyIndustrySelectList(null), "请选择")
    }
    else
    {
        if (CH.GetDataById<Project>(Model.ProjectId).AreaID == null)
        {
                        @Html.LabelFor(model => model.IndustryId);
                        
                        @Html.DropDownListFor(model => model.IndustryId, SelectHelper.CompanyIndustrySelectList(null), "请选择")
        }
        else
        {
            int i = 0;
            List<SelectListItem> lists1 = SelectHelper.CompanyIndustrySelectList(null).ToList();
            SelectListItem item1 = new SelectListItem();
            item1.Value = null;
            item1.Text = "请选择";
            lists1.Insert(0, item1);
            foreach (SelectListItem item in lists1)
            {
                if (item.Value != null)
                {
                    if (CH.GetDataById<Project>(Model.ProjectId).AreaID.ToString() == item.Value)
                    {
                        lists1[i].Selected = true;
                                @Html.LabelFor(model => model.IndustryId);
                               @Html.DropDownListFor(model => model.IndustryId, lists1 )
                        break;
                    }
                }
                i++;
            }
        }
    }
                           
}
            </td>
            <td>
                @Html.LabelFor(model => model.TypeId)
                @Html.DropDownListFor(model => model.TypeId, SelectHelper.CompanyTypeSelectList(null), "请选择")
            </td>
            <td>
                @Html.LabelFor(model => model.ProgressId)
                @Html.DropDownListFor(model => model.ProgressId, SelectHelper.ProgressSelectList(null), "请选择")
            </td>
            <td>
                @Html.LabelFor(model => model.CoreLVLID)
                @Html.DropDownListFor(model => model.CoreLVLID, SelectHelper.CoreLVLSelectList(null), "请选择")
            </td>
        </tr>
        <tr>
                <td colspan="4">
                @Html.LabelFor(model => model.Description)
                        @Html.TextAreaFor(model => model.Description)
                </td>
            </tr>
        @*<tr>
            <td colspan="4">

                @{Html.Telerik().PanelBar()
                .Name("PanelBarBulk")
                .HtmlAttributes(new { style = "width: 100%" })
                .Items(parent =>
                {
                    parent.Add()
                        .Text("更多...")
                        .Content(@<text>
                            @Html.LabelFor(model => model.Description)
                            @Html.TextAreaFor(model => model.Description)
                            公司主要客户
                            @Html.TextAreaFor(model => model.Customers)
                            主要竞争对手
                            @Html.TextAreaFor(model => model.Competitor)
                            电话pitch点
                            @Html.TextAreaFor(model => model.PitchedPoint)
                        </text>)
                        .Expanded(false);
                })
                .Render();
                }
            </td>
        </tr>*@
        <tr>
            <td colspan="4">
                <fieldset id="categories" style="margin: 0px 0px 0px 0px;">
                    <legend>细分行业 <span id="categoriesError">必须选择一项</span></legend>
                    @foreach (Category category in CH.GetAllData<Category>(c => c.ProjectID == Model.ProjectId))
                    { 
                
                        <label class="company-category" style="width: auto;">
                            <input  name="Categories" type="checkbox" value="@category.ID" />
                            @category.Name
                        </label>
               
                    }
                </fieldset>
        </tr>
        <tr>
            <td colspan="4">
                <table class="leadsTable">
                    <tr>
                        <th>
                            中文名称
                        </th>
                        <th>
                            英文名称
                        </th>
                        <th>
                            性别
                        </th>
                        <th>
                            客户职位
                        </th>
                        <th>
                            客户直线
                        </th>
                        <th>
                            移动电话
                        </th>
                        <th>
                            工作邮箱
                        </th>
                    </tr>
                    @for (int i = 0; i < 10; i++)
                    {
                        <tr id="row_@{@i}">
                            <td>
                                @Html.TextBoxFor(model => model.Leads.ElementAt(i).LeadName_CN)
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).LeadName_CN)
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Leads.ElementAt(i).LeadName_EN)
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).LeadName_EN)
                            </td>
                            <td>
                                @Html.DropDownListFor(model => model.Leads.ElementAt(i).Gender, SelectHelper.GenderSelectList("Mr"))
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).Gender)
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Leads.ElementAt(i).Title)
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).Title)
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Leads.ElementAt(i).Telephone)
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).Telephone)
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Leads.ElementAt(i).CellPhone)
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).CellPhone)
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.Leads.ElementAt(i).WorkingEmail)
                                @Html.ValidationMessageFor(model => model.Leads.ElementAt(i).WorkingEmail)
                            </td>
                        </tr>
                    }
                </table>
            </td>
        </tr>
    </table>
}
<style>
    table
    {
        border: none;
        padding: 0px;
        margin: 0px;
    }
    table tr td
    {
        width: 240px;
        border: none;
    }
    table tr td label
    {
        display: inline-block;
        width: 55px;
        padding-right: 5px;
    }
    table tr td input[type=text], table tr td select
    {
        width: 140px;
    }
    table tr td textarea
    {
        height: 100px;
    }
    #categoriesError
    {
        display: none;
    }
    fieldset.fieldError span
    {
        display: inline-block !important;
        color: Red;
    }
</style>
<script>
    $(function () {
        $("#Name_CN").change(function () {
            if ($("#Name_CN").val() != '') {
                $.post('CheckCompanyNameCNExist', { name: $("#Name_CN").val(), projectid: $("#ProjectId").val() }, function (result) {
                    if (result.flag == 0)
                        alert(result.Content);
                    else if (result.flag == 1) {
                        if (confirm(result.Content)) {
                            $.post('PickUpDirect', { crmid: result.crmid, projectid: $('#projectid').val() }, function (result) {
                                if (result.companyRelationshipId != null) {
                                    alert('领用成功');
                                    crmid = result.companyRelationshipId;
                                    var currentProjectId = $('#projectid').val();
                                    RefreshCrmTree(currentProjectId, result.companyRelationshipId, result.processid, result.corelvlid);
                                }
                                else {
                                    if (result != "") {
                                        alert('领用失败:' + result);
                                    }
                                    else {
                                        alert('领用失败');
                                    }
                                }
                                CancelBulkEntry();
                            });

                        }
                    }

                });
            }
        })
        $("#Name_EN").change(function () {
            if ($("#Name_EN").val() != '') {
                $.post('CheckCompanyNameENExist', { name: $("#Name_EN").val(), projectid: $("#ProjectId").val() }, function (result) {
                    if (result.flag == 0)
                        alert(result.Content);
                    else if (result.flag == 1) {
                        if (confirm(result.Content)) {
                            $.post('PickUpDirect', { crmid: result.crmid, projectid: $('#projectid').val() }, function (result) {
                                if (result.companyRelationshipId != null) {
                                    alert('领用成功');
                                    crmid = result.companyRelationshipId;
                                    var currentProjectId = $('#projectid').val();
                                    RefreshCrmTree(currentProjectId, result.companyRelationshipId, result.processid, result.corelvlid);
                                }
                                else {
                                    if (result != "") {
                                        alert('领用失败:' + result);
                                    }
                                    else {
                                        alert('领用失败');
                                    }
                                }
                                CancelBulkEntry();
                            });

                        }
                    }
                });
            }
        })
    })
</script>