@{
    ViewBag.Title = "项目出单";

    ViewBag.Action = "Deals";
    ViewBag.Controller = "Project";
}

@using Entity
@model List<Deal>
@Html.Partial("contenttitle", "项目出单")

@Html.Partial("projectselector")


@(Html.Telerik().Grid<Deal>(Model).Name("Deal")
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.CompanyRelationship.Company.Name).Title("客户公司").Width(150);
                    c.Bound(item => item.DealCode).Title("出单号").Width(100);
                    c.Bound(item => item.Sales).Width(150);
                    c.Bound(item => item.Payment).Format("{0:c}").Width(150);
                    c.Bound(item => item.Income).Format("{0:c}").Width(150);
                    c.Bound(item => item.IsClosed).Width(50);
                    c.Bound(item => item.Abandoned).Width(50);
                    c.Bound(item => item.ExpectedPaymentDate).Format("{0:d}").Width(150);
                    c.Bound(item => item.ActualPaymentDate).Format("{0:d}").Width(150);
                    c.Bound(item => item.ID).Width(200).Title("操作").Template(@<span>
                    <a href=@Url.Content("~/Deal/Edit/" + item.ID) >编辑</a> | <a href=@Url.Content("~/Deal/Details/" + item.ID)>详细</a>  | <a href=@Url.Content("~/Deal/delete/" + item.ID) >删除</a> 
                   </span>);
                }).DetailView(d=>d.Template(@<text>
                @(Html.Telerik().Grid<Participant>(item.Participants).Name("mastersheet"+ item.ID).DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(o => o.Name);
                    c.Bound(o => o.Title);
                    c.Bound(o => o.Contact);
                    c.Bound(o => o.Mobile );
                    c.Bound(o => o.Email);
                    c.Bound(o => o.ParticipantType.Name);
                   
                }) .Resizable(resizing => resizing.Columns(true))
                                        .Filterable().Sortable().Groupable()
                                        .Pageable(p => p.PageSize(20))
                                        .Scrollable(scrolling => scrolling.Height(350))
                )</text>))
                                        .Resizable(resizing => resizing.Columns(true))
                                        .Filterable().Sortable().Groupable()
                                        .Pageable(p => p.PageSize(20))
                                        .Scrollable(scrolling => scrolling.Height(350))

)


