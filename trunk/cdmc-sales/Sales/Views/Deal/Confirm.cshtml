@model Entity.Deal
@{
    ViewBag.Title = "出单确认";
}
@using Entity
@using Utl
@using BLL
@{
    List<SelectListItem> convert = new List<SelectListItem>() { new SelectListItem() { Text = "是", Value = "true" }, new SelectListItem() { Text = "否", Value = "false" } };
}
}
<fieldset>
    <legend>@SR.Form</legend>
    <div class="display-field">
        @Html.HiddenFor(model => model.DealCode)
        @Html.HiddenFor(model => model.PackageID)
        @Html.HiddenFor(model => model.CompanyRelationshipID)
        @Html.HiddenFor(model => model.ExpectedPaymentDate)
        @Html.HiddenFor(model => model.SignDate)
        @Html.HiddenFor(model => model.Payment)
        @Html.HiddenFor(model => model.IsClosed)
        @Html.HiddenFor(model => model.Committer)
        @Html.HiddenFor(model => model.CommitterContect)
        @Html.HiddenFor(model => model.CommitterEmail)
        @Html.HiddenFor(model => model.ActualPaymentDate)
        @Html.HiddenFor(model => model.Sales)
        @Html.HiddenFor(model => model.PaymentDetail)
        @Html.HiddenFor(model => model.TicketDescription)
        @Html.HiddenFor(model => model.Abandoned)
        @Html.HiddenFor(model => model.AbandonReason)
        @Html.Hidden("ProjectID", (int)ViewBag.ProjectID)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Income)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.Income)
        @Html.ValidationMessageFor(model => model.Income)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.IsConfirm, "是否确认")
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.IsConfirm, convert, "请选择");
        @Html.ValidationMessageFor(model => model.IsConfirm)
    </div>
</fieldset>
@{
    if (Model != null)
    {
        Html.Partial("Participants", Model.Participants == null ? new List<Participant>() : Model.Participants);
    }
}
