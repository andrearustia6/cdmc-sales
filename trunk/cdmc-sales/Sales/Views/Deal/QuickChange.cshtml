@model Entity.Deal
@{
    ViewBag.Title = "出单编辑";
}
@using Entity
@using Utl
@using BLL
<fieldset>
    <legend>@SR.Form</legend>
    <table>
        <tr>
            <td>
                <div class="display-field">
                    @Html.LabelFor(model => model.DealCode)
                </div>
            </td>
            <td>
                <div class="display-field">
                    @Html.TextBox("DealCode", Model == null ? "出单后自动生成" : Model.DealCode, new { READONLY = "readonly" })
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PackageID, "Package")
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownListFor(m => m.PackageID, new SelectList(CH.GetAllData<Package>(), "ID", "Name"), "-请选择-")
                    @Html.ValidationMessageFor(model => model.PackageID)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CompanyRelationshipID, "公司")
                </div>
            </td>
            <td>
                 <div class="editor-field">
                    @{
                        List<CompanyRelationship> data = null;
                        var lvl = Employee.CurrentRole.Level;
                        int? projectid = Model == null ? ViewBag.ProjectID as int? : Model.ProjectID;
                        if (lvl <= 100 && lvl >= 10)
                        {
                            data = CRM_Logical.GetUserCallingCRM(projectid).ToList();

                        }
                        @Html.DropDownListFor(m => m.CompanyRelationshipID, new SelectList(data.OrderBy(o => o.Company.Name).ToList(), "ID", "CompanyName"), "-请选择-")<br />
                        @Html.ValidationMessageFor(model => model.CompanyRelationshipID)
                    }
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.ExpectedPaymentDate)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.Telerik().DatePickerFor(model => model.ExpectedPaymentDate)
                    @Html.ValidationMessageFor(model => model.ExpectedPaymentDate)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.SignDate)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.Telerik().DatePicker().Name("SignDate").Value(Model == null ? DateTime.Now : Model.SignDate)
                    @Html.ValidationMessageFor(model => model.SignDate)
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Payment)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.Telerik().CurrencyTextBoxFor(model => model.Payment)
                    @Html.ValidationMessageFor(model => model.Payment)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Committer)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Committer)<br />
                    @Html.ValidationMessageFor(model => model.Committer)
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CommitterContect)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CommitterContect)
                    @Html.ValidationMessageFor(model => model.CommitterContect)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.CommitterEmail)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CommitterEmail)
                    @Html.ValidationMessageFor(model => model.CommitterEmail)
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Sales)
                </div>            
            </td>
            <td>
                <div class="editor-field">
                    @{
                        var name = Model == null ? Employee.CurrentUserName : Model.Sales;
                        <input name ="Sales" value="@name" />
                    }
                    @Html.ValidationMessageFor(model => model.Sales)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.PaymentDetail)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.PaymentDetail)
                    @Html.ValidationMessageFor(model => model.PaymentDetail)
                </div>            
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.TicketDescription)
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextAreaFor(model => model.TicketDescription)
                    @Html.ValidationMessageFor(model => model.TicketDescription)
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Abandoned, "是否坏账")
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.EditorFor(m => m.Abandoned)
                    @Html.ValidationMessageFor(model => model.Abandoned)
                </div>
            </td>
            <td>
                <div class="editor-label">
                    @Html.LabelFor(model => model.AbandonReason, "坏账原因")
                </div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.TextAreaFor(m => m.AbandonReason)
                    @Html.ValidationMessageFor(model => model.AbandonReason)
                </div>
                <div class="editor-field">
                    @Html.HiddenFor(m => m.IsConfirm)
                </div>
                @Html.Hidden("ProjectID", (int)ViewBag.ProjectID)
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">客户名称</div>
            </td>
            <td>
                <div class="editor-field">@Html.Editor("Name")</div>
            </td>
            <td>
                <div class="editor-label">客户职位</div>
            </td>
            <td>
                <div class="editor-field">@Html.Editor("Title")</div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">客户性别</div>
            </td>
            <td>
                <div class="editor-field">@Html.DropDownList("Gender", new SelectList(new List<string>() { "Mr", "Mrs" }, "-请选择-"))</div>
            </td>
            <td>
                <div class="editor-label">移动电话</div>
            </td>
            <td>
                <div class="editor-field">@Html.Editor("Mobile")</div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">客户直线</div>
            </td>
            <td>
                <div class="editor-field">@Html.Editor("Contact")</div>
            </td>
            <td>
                <div class="editor-label">电子邮箱</div>
            </td>
            <td>
                <div class="editor-field">@Html.Editor("Email")</div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label">参会类型</div>
            </td>
            <td>
                <div class="editor-field">
                    @Html.DropDownList("ParticipantTypeID", new SelectList(CH.GetAllData<ParticipantType>(), "ID", "Name"), "-请选择-")
                </div>
            </td>
        </tr>
    </table> 
</fieldset>

