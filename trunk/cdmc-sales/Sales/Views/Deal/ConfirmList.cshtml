@using Entity
@{
    ViewBag.Title = "出单到账确认";
}
@Html.Partial("contenttitle", "出单到账确认")
<div id="filter-container" style="height: 30px;">
    <span>
        <label style="margin:5px;float: left;">筛选:</label>
     @(Html.Telerik().DropDownList()
        .Name("Filters")
        .BindTo(Utl.SelectHelper.FilterSelectList())
        .HtmlAttributes(new { style = "width: 200px; margin:5px; float: left;" })
        .SelectedIndex(0)
        .ClientEvents(events => events.OnChange("filterChange").OnLoad("onDropDownListLoad"))
    )
    </span>
</div>
@(Html.Telerik().Grid<Model.AjaxViewDeal>().Name("Grid")
.DataKeys(keys => { keys.Add(s => s.ID); })
.Columns(c =>
{
    c.Bound(item => item.CompanyName);//客户公司
    c.Bound(item => item.ProjectCode);//项目编号
    c.Bound(item => item.DealCode);//出单号
    c.Bound(item => item.PackageName);//Package中文名
    c.Bound(item => item.Committer);//客户签单人
    c.Bound(item => item.TicketDescription);//权益描述
    c.Bound(item => item.SignDate).Format("{0:d}");//签约日期
    c.Bound(item => item.ExpectedPaymentDate).Format("{0:d}");//合约付款日期
    c.Bound(item => item.Payment).Format("{0:c}");//应付款
    c.Bound(item => item.ActualPaymentDate).Format("{0:d}");//实际付款日期
    c.Bound(item => item.Income).Format("{0:c}");//实际入账
    //c.Bound(item => item.IsClosed).Width(70);
    //c.Bound(item => item.CommitterContect).Width(100);
    //c.Bound(item => item.Abandoned).Width(70);
    c.Bound(item => item.IsConfirm).Width(100);

    if (Utl.Employee.CurrentRole.Level == 4)//财务
    {
        c.Command(commands =>
        {
            commands.Edit().ButtonType(GridButtonType.Image);

        }).Title("出单到账操作");
    }
    else//会务
    {
        c.Command(commands =>
        {
            commands.Edit().ButtonType(GridButtonType.Image);
        }).Title("确认");
    }
    c.Bound(item => item.IsConfirm).Hidden(true);

})
.ClientEvents(events => events.OnDataBinding("dataBinding").OnEdit("onEdit").OnRowDataBound("onRowDataBound"))
.DataBinding(dataBinding =>
{
    dataBinding.Ajax()
        .Select("_SelectIndex", "Deal")
        .Update("_SaveAjaxEditing", "Deal");
})
.Editable(editing => editing.Mode(GridEditMode.PopUp))
.Resizable(resizing => resizing.Columns(true)).Filterable().Sortable().Groupable()
.Pageable(p => p.PageSize(20)).Scrollable(scrolling => scrolling.Height(350)))

<script type="text/javascript">
    function filterChange() {
        $("#Grid").data("tGrid").rebind();
    }
    function dataBinding(e) {
        var filter = $("#Filters").data("tDropDownList").value();
        e.data = $.extend(e.data, { filterId: filter });
    }

    function selectedFilter() {
        return $("#Filters").data("tDropDownList").value();
    }
    function onDropDownListLoad() {
        $(this).data("tDropDownList").fill();
    }
    function onEdit(e) {
        var title ='@{
            if (Utl.Employee.CurrentRole.Level == 4)
            { <text>请您填写入账额</text> }
            else
            { <text>请您确认</text> }
        }';
        $(e.form).closest(".t-window-content").width(750).height(550);
        var popup = $("#" + e.currentTarget.id + "PopUp");
        popup.find(".t-window-title").html(title);
        var popupDataWin = popup.data("tWindow");
        var l = ($(window).width() / 2 - $(popup).width() / 2);
        popup.css({ "left": l + "px", "margin-left": "0", "width": $(popup).width(), "height": $(popup).height()});
        //alert(JSON.stringify(popup));
    }
    function onRowDataBound(e) {
        if ((e.dataItem.IsConfirm == "是") && ( e.dataItem.Income != 0  || e.dataItem.ActualPaymentDate != null )) {
            $(e.row).find('a.t-grid-edit').remove(); //remove Edit button
        }
    }


</script>
