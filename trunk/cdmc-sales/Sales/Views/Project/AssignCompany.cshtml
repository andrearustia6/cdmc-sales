@{
    ViewBag.Title = "分配公司";
}
@using Entity
@using Utl
@using BLL
@model Model.AjaxProject         
<div id="filter-container" style="height: 30px;">
    <span>
        <label style="margin:5px;">
            项目:</label>@Html.DropDownListFor(model => model.ProjectID, SelectHelper.ProjectSelectList(EditRight.DealsEdit.ToString(), Model.ProjectID), new { id = "projectFilter" })</span>
    <span>
        <label style="margin:5px;">
            销售:</label>
        @Html.DropDownList("companyFilter", SelectHelper.MemberSelectListForProject(Model.ProjectID , (string)ViewBag.MemberFilterForCompany), "所有公司")</span>
    <button onclick="UnsignCompanies()">
        取消分配</button>
</div>
<fieldset>
    <legend>可分配销售 </legend>
    <div class="assignableMembers">
        @foreach (SelectListItem selectListItem in SelectHelper.MemberSelectListForProject(Model.ProjectID))
        {
            if (selectListItem.Value != (string)ViewBag.MemberFilterForCompany && selectListItem.Value != "-1" && selectListItem.Value != "" && selectListItem.Value != "-2")
            {
            <span style="display: inline-block; width: 100px">@Html.CheckBox(selectListItem.Value, new { value = selectListItem.Value })
                <label>@selectListItem.Text</label></span>
            }
        }
    </div>
    <div style="text-align: left;">
        <button onclick="AssignCompanies()">
            分配</button></div>
</fieldset>
@{

@(Html.Telerik().Grid(Model.CRMs).Name("Company").DataKeys(keys =>
                {
                    keys.Add(s => s.CRMID);
                })
                .Columns(c =>
                {
                    c.Template(@<text><input name="checkedRecords" class="companybox" type="checkbox" value="@item.CRMID " title="checkedRecords"  />
</text>).Title("<input type='checkbox' id='allCompanyBox' />").Width(30).HtmlAttributes(new { style = "text-align:center" });
                    c.Bound(item => item.CompanyName).Title("公司名").Width(300);
                    c.Bound(item => item.MembersString).Title("销售").Width(70);
                    //c.Bound(item => item.Importancy).Width(80);
                    c.Bound(item => item.CategoryString).Title("细分行业");
                    c.Bound(item => item.CompanyType).Width(100);
                    c.Bound(item => item.CrmCreateDate).Title("添加时间").Width(200);
                    c.Bound(item => item.CrmCreator).Title("添加人").Width(100);

                }).Resizable(resizing => resizing.Columns(true)).Pageable(page => page.Enabled(false).PageSize(10)).Sortable().Filterable().Scrollable(scrolling => scrolling.Height(550))

 )
}

<script type="text/javascript">
    $(
        function () {
            $('#projectFilter').change(function () {
                $('#companyFilter option').eq(0).prop('selected', true);
                freshPage();
            });
            $('#companyFilter').change(
                function () {
                    freshPage();
                }
            );

            $("#allCompanyBox").click(
            function () {
                $(".companybox").attr("checked", $(this).attr("checked") ? true : false);
            }
        );
        }
    );
    
    function AssignCompanies() {
        var selectedCompanies = "";
        $('.t-grid tbody input[type=checkbox]:checked').each(
            function () {
                selectedCompanies += $(this).val() + ",";
            }
        );
        var selectedMembers = "";
        $('.assignableMembers input[type=checkbox]:checked').each(
                function () {
                    selectedMembers += $(this).val() + ",";
                }
            );
        if (selectedCompanies.length > 0) {
            selectedCompanies = selectedCompanies.substr(0, selectedCompanies.length - 1);
        } else {
            alert('请选择相应的公司');
            return;
        }
        if (selectedMembers.length > 0) {
            selectedMembers = selectedMembers.substr(0, selectedMembers.length - 1);
        } else {
            alert('请选择相应的销售');
            return;
        }
        $.post('AssignCompanies', { selectedCompanies: selectedCompanies, selectedMembers: selectedMembers }, function (result) {
            alert(result);
            freshPage();
        });
    }

    function UnsignCompanies() {
        var selectedCompanyFilter = $('#companyFilter').val();
//        if (selectedCompanyFilter == '-1' || selectedCompanyFilter == '') {
//            return;
        //        }


        var selectedCompanies = "";


//        if (selectedCompanyFilter == '-2') {
//            selectedCompanies = "all" + $('#projectid').val();
//        }
//        else {
//            $('.t-grid tbody input[type=checkbox]:checked').each(
//            function () {
//                selectedCompanies += $(this).val() + ",";
//            });
//        }

        $('.t-grid tbody input[type=checkbox]:checked').each(
            function () {
                selectedCompanies += $(this).val() + ",";
            });

        if (selectedCompanies.length > 0) {
            selectedCompanies = selectedCompanies.substr(0, selectedCompanies.length - 1);
        } else {
            alert('请选择相应的公司');
            return;
        }

        $.post('UnsignCompanies', { selectedCompanyFilter: selectedCompanyFilter, selectedCompanies: selectedCompanies }, function (result) {
            alert(result);
            freshPage();
        });
    }

    function freshPage() {
        var projectFilterId = $('#projectFilter').val();
        var assignCompanyId = $('#companyFilter').val();       
        var myurl = new SF.URL(window.location.href);
        myurl.set('projectId', projectFilterId);
        myurl.set('memberFilterForCompany', assignCompanyId);
        window.location = myurl.url();
    }
</script>
