@{
    ViewBag.Title = "Project";
}
@using Entity
@using Utl
@using BLL
@model Project

@Html.Partial("contenttitle", "项目管理")
@*@Html.Partial("MemberEditor", new LeadCall() { LeadID = Model.ID })
@Html.Partial("LeadPackageEditor", CRM_Logical.GetTargetOfPackage(Model, (object)ViewBag.ProjectID))*@
@(Html.Telerik().TabStrip().Name("TabStrip").SelectedIndex(0).Items(items =>
{
    items.Add().Text("基本信息").Content(@<text>@BaseInfo(Model)</text>);
    items.Add().Text("成员信息").Content(@<text>@Members(Model)</text>);
    items.Add().Text("每月目标").Content(@<text>@Targets(Model)</text>);
    items.Add().Text("项目公司").Content(@<text>@Companys(Model)</text>);
    items.Add().Text("出单情况").Content(@<text>@Deals(Model)</text>);

})
)
@helper BaseInfo(Project project)
    { 
   
    <div style="width: 500; padding:15px; min-height:350px;">
     @Html.ActionLink("基本信息编辑", "Edit", "Project", new { id = Model.ID }, new { style="margin-bottom:15px;"})
        <ul>
            <li>
                <label>
                    项目名称:</label>@project.Name</li>
            <li>
                <label>
                    项目编号:</label>@project.ProjectCode</li>
             <li>
                <label>
                    开始时间:</label>@project.StartDate.ToShortDateString()</li>
            <li>
                <label>
                    结束时间:</label>@project.EndDate.ToShortDateString()</li>
            <li>
                <label>
                    项目状态:</label>@project.IsActived</li>
            <li>
                <label>
                    销售目标:</label>@project.Target</li>
            <li>
                <label>
                    激活:</label>@project.IsActived</li>
                    <li>
            <label>
                    板块负责人:</label>@project.Manager</li>
            <li>
                <label>
                    团队负责人:</label>@project.TeamLeader</li>
        </ul>
    </div>
     
}
@helper Members(Project p)
    { 

    @(Html.Telerik().Grid<Member>(p.Members).Name("members").ToolBar(commands => 
                    commands.Custom().Text("添加成员").Action("Create", "Member", new { projectid = Model.ID }))
                            .ToolBar(commands =>commands.Custom().Text("分配字头").Action("Distribution", "Project", new { projectid = Model.ID }))
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.Name).Width(200);
                    c.Bound(item => item.Characters);
                    c.Bound(item => item.ID).Title("操作").Width(200).Template(@<span> <a href=@Url.Content("~/Member/Edit/" + item.ID) >
                        编辑</a> | <a href=@Url.Content("~/Member/Details/" + item.ID)>详细</a> | <a href=@Url.Content("~/Member/delete/" + item.ID) >
                            删除</a> </span>);
                }).Scrollable(scrolling => scrolling.Height(350))
                )
}
        
@helper Deals(Project p)
    { 

    @(Html.Telerik().Grid<Deal>(p.Deals).Name("Deals")
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.Payment).Width(200);
                    c.Bound(item => item.IsClosed).Width(100);
                    c.Bound(item => item.Lead.FullName).Width(100);
                    c.Bound(item => item.Lead.Company.FullName).Width(100);
                    c.Bound(item => item.ID).Title("操作").Width(200).Template(@<span> <a href=@Url.Content("~/Member/Edit/" + item.ID) >
                        编辑</a> | <a href=@Url.Content("~/Member/Details/" + item.ID)>详细</a> | <a href=@Url.Content("~/Member/delete/" + item.ID) >
                            删除</a> </span>);
                }).Scrollable(scrolling => scrolling.Height(350))

)
  
}

@helper Companys(Project p)
    {  
     @(Html.Telerik().Grid(p.Companys).Name("Company").ToolBar(commands => commands.Custom().Text("管理项目公司").Action("SelectCompanyByProjectCode", "Project", new { projectid = Model.ID }))
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {
                    c.Bound(item => item.FullName).Width(150);
                    c.Bound(item => item).Title("拨打人").Template(@<text>@CRM_Logical.GetMemberNameWhoCallTheCompany(item.ID, p.ID)</text>).Width(150);
                    c.Bound(item => item.DistrictNumber.FullName).Width(100);
                    c.Bound(item => item.Contact).Width(100);
                    c.Bound(item => item).Template(@<text>@if (p.CoreList.Any(pc => pc.ID == item.ID))
                                                          {<p>是</p>}
                                                          else
                                                          {<p>否</p>}</text>).Title("核心公司?").Width(100);
                    c.Bound(item => item.Available).Width(100);
                    c.Bound(item => item.Category.Name_CH).Title("行业").Width(100);
                    c.Bound(item => item.CompanyType.Name).Width(100);
                    c.Bound(item => item.Cerator).Width(100);
                    c.Bound(item => item.From).Width(100);
                })
                                       .Resizable(resizing => resizing.Columns(true))
                                        .Pageable(page => page.PageSize(10))
                                       .Sortable()
                                       .Filterable()
                                       .Scrollable(scrolling => scrolling.Height(350))
                                               )
}



@helper Targets(Project p)
    { 
      @(Html.Telerik().Grid<TargetOfMonth>(p.TargetOfMonths).Name("TargetOfMonths").ToolBar(commands =>
                                    commands.Custom().Text("创建新月目标").Action("Create", "TargetOfMonth", new { projectid = Model.ID }))
                                                    .ToolBar(commands => commands.Custom().Text("目标划分").Action("TargetOfMonth", "Project", new { projectid = Model.ID }))
                .DataKeys(keys =>
                {
                    keys.Add(s => s.ID);
                })
                .Columns(c =>
                {

                    c.Bound(item => item.BaseDeal).Template(@<text>@Html.Partial("DisplayCurrency", DisplayCurrency.Dollars(item, "BaseDeal")) </text>).Width(100);
                    c.Bound(item => item.Deal).Width(100).Template(@<text>@Html.Partial("DisplayCurrency", DisplayCurrency.Dollars(item, "Deal")) </text>).Width(100);
                    c.Bound(item => item.CheckIn).Template(@<text>@Html.Partial("DisplayCurrency", DisplayCurrency.Dollars(item, "CheckIn")) </text>).Width(100);
                    c.Bound(item => item.StartDate).Template(@<text><p>@item.StartDate.ToShortDateString()</p></text>).Width(100);
                    c.Bound(item => item.EndDate).Template(@<text><p>@item.EndDate.ToShortDateString()</p></text>).Width(100);
                    c.Bound(item => item.ID).Title("操作").Width(200).Template(@<span> <a href=@Url.Content("~/TargetOfMonth/Edit/" + item.ID) >
                        编辑</a> | <a href=@Url.Content("~/TargetOfMonth/Details/" + item.ID)>详细</a> | <a href=@Url.Content("~/TargetOfMonth/delete/" + item.ID) >删除</a> </span>);
                }).Scrollable(scrolling => scrolling.Height(350))
           )
        }


