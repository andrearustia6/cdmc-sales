@model Entity.TargetOfMonth
@using Utl
<fieldset>
    <legend>@SR.Form</legend>
    <div class="editor-label">
        @Html.LabelFor(model => model.StartDate)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.StartDate).Value(Model == null?DateTime.Now.StartOfMonth():Model.StartDate)
        @Html.ValidationMessageFor(model => model.StartDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.EndDate)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.EndDate).Value(Model == null ? DateTime.Now.EndOfMonth() : Model.EndDate)
        @Html.ValidationMessageFor(model => model.EndDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Deal)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.Deal)
        @Html.ValidationMessageFor(model => model.Deal)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.BaseDeal)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.BaseDeal)
        @Html.ValidationMessageFor(model => model.BaseDeal)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.CheckIn)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.CheckIn)
        @Html.ValidationMessageFor(model => model.CheckIn)
    </div>
     <div class="editor-field">
        @Html.HiddenFor(model => model.ProjectID)
        @Html.DisplayFor(model => model.ProjectID)
        @Html.ValidationMessageFor(model => model.ProjectID)
    </div>
</fieldset>
