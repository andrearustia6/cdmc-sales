@model Entity.Deal
@{
    ViewBag.Title = "出单编辑";
}
@using Entity
@using Utl
@using BLL
<fieldset>
    <legend>@SR.Form</legend>
    <div class="editor-label">
        @Html.LabelFor(model => model.PackageID, "Package")
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(m => m.PackageID, new SelectList(CH.GetAllData<Package>(), "ID", "Name"),"-请选择-")
        @Html.ValidationMessageFor(model => model.PackageID)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.CompanyRelationshipID, "公司")
    </div>
    <div class="editor-field">
    @{
        //var data = ViewBag.AvaibleCRM==null? CH.GetAllData<CompanyRelationship>():ViewBag.AvaibleCRM as List<CompanyRelationship>;
        List<CompanyRelationship> data;
        var lvl = Employee.GetCurrentRoleLevel();
        int? projectid = ViewBag.ProjectID as int?;
        var project = CH.GetDataById<Project>(projectid, "CompanyRelationships");
        if (lvl<=100 && lvl>=10)
        {
            data = project.CompanyRelationships.FindAll(c => c.WhoCallTheCompanyMemberName().Split('|').Any(s => s == Employee.GetCurrentUserName()));
        }
        else
        {
            data = project.CompanyRelationships;
        }
        @Html.DropDownListFor(m => m.CompanyRelationshipID, new SelectList(data, "ID", "CompanyName"), "-请选择-")
        @Html.ValidationMessageFor(model => model.CompanyRelationshipID)
        }
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ExpectedPaymentDate)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.ExpectedPaymentDate)
        @Html.ValidationMessageFor(model => model.ExpectedPaymentDate)
    </div>
  
    <div class="editor-label">
        @Html.LabelFor(model => model.SignDate)
    </div>
        <div class="editor-field">
        @Html.Telerik().DatePicker().Name("SignDate").Value(Model == null ? DateTime.Now : Model.SignDate)
        @Html.ValidationMessageFor(model => model.SignDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Payment)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.Payment)
        @Html.ValidationMessageFor(model => model.Payment)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.IsClosed)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.IsClosed)
        @Html.ValidationMessageFor(model => model.IsClosed)
    </div>
     <div class="editor-label">
        @Html.LabelFor(model => model.ActualPaymentDate)
    </div>
    <div class="editor-field">
        @Html.Telerik().DatePickerFor(model => model.ActualPaymentDate)
        @Html.ValidationMessageFor(model => model.ActualPaymentDate)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.Income)
    </div>
    <div class="editor-field">
        @Html.Telerik().CurrencyTextBoxFor(model => model.Income)
        @Html.ValidationMessageFor(model => model.Income)
    </div>
       <div class="editor-label">
        @Html.LabelFor(model => model.Sales)
    </div>
    <div class="editor-field">
    @{
        var name = Model == null ? Employee.GetCurrentUserName() : Model.Sales;
        <input  name ="Sales" value="@name" />
      }
        @Html.ValidationMessageFor(model => model.Sales)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.PaymentDetail)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.PaymentDetail)
        @Html.ValidationMessageFor(model => model.PaymentDetail)
    </div>
 

     <div class="editor-label">
        @Html.Label( "项目")
    </div>
    <div class="editor-field">
         @Html.Label(Model==null? CH.GetDataById<Project>((int)ViewBag.ProjectID).Name:Model.ProjectName())
        @Html.Hidden("ProjectID", (int)ViewBag.ProjectID)
       
    </div>
</fieldset>
