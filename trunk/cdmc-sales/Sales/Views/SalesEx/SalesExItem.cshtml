@using Model
@using Utl
@using Entity
@model AjaxCRM
@{
    string guidFormName = Guid.NewGuid().ToString("N");
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@if (Model != null)
{
    Html.Telerik().Splitter().Name("sp2").HtmlAttributes(new { style = "min-height: 790px;" })
               .Orientation(SplitterOrientation.Vertical).Panes(panes =>
               {
                   panes.Add().Size("35%").Content(@<text>@CompanyInfo(guidFormName)</text>);
                   panes.Add().Content(@<text>@LeadsInfo()</text>);
               }).Render();
}
@helper CompanyInfo(string guidFormName)
    {
   
        
  <div class="fenge">
	<div class="fenge_2">@Model.CompanyName   
    <input type="button" style="float:right" value="+Lead" onclick="editCompany()" />
    <input style="float:right" type="button" onclick="onLeadEdit(@(@Model.CRMID))" value="更新" />
    </div>
     
    <div class="fenge_3">
    <fieldset>
    <legend>公司信息</legend>

       <dl class="fieldname">
            <dd><font>中文名：</font><span id="currentCompanyName" class="datainfo">@Model.CompanyNameCH </span></dd>
            <dd><font>英文名：</font><span id="currentCompanyNameEN" class="datainfo">@Model.CompanyNameEN</span></dd>
                <dd><font>区号：</font><span id="currentCompanyDistrictNumberString" class="datainfo">@Model.CompanyDistrictNumberString</span></dd>
                <dd><font>公司总机：</font><span id="currentCompanyContact" class="datainfo">@Model.CompanyContact</span></dd>
                <dd><font>传真：</font><span id="currentCompanyFax" class="datainfo">@Model.CompanyFax</dd>
                <dd><font>细分行业：</font><span id="currentCompanyCategoryStrings" class="datainfo">@Model.CompanyCategoryStrings</span>
                </dd>
                <dd><font>成熟度：</font><span id="currentProgressString" class="datainfo">@Model.ProgressString</span>
                </dd>
        </dl>
        
        </fieldset>
    </div>
    </div>
     
    
     
       
   
    @(Html.Telerik().Window().Title("更新公司")
            .Name(guidFormName)
    .Buttons(buttons => buttons.Close())
    .Content(@<text><div class="dialogue-editcompany">
        <div class="companyEdit-wrapper">
            <form action="/SalesEx/EditSaleCompany" data-ajax="true" data-ajax-mode="replace"
            data-ajax-update="ajax-holder" class="companyEditForm" method="post">
            @Html.HiddenFor(model => model.ProjectID)
            @Html.HiddenFor(model => model.CompanyID)
            <ul>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.CompanyNameCH) @Html.TextBoxFor(model => model.CompanyNameCH, new { @class = "updateName" })
                    @Html.ValidationMessageFor(model => model.CompanyNameCH)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.CompanyNameEN) @Html.TextBoxFor(model => model.CompanyNameEN)
                        @Html.ValidationMessageFor(model => model.CompanyNameEN)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.AreaID) @Html.DropDownListFor(model => model.AreaID, SelectHelper.CompanyIndustrySelectList(null), "请选择", new { })
                    @Html.ValidationMessageFor(model => model.AreaID)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.CompanyTypeID) @Html.DropDownListFor(model => model.CompanyTypeID, SelectHelper.CompanyTypeSelectList(null), "请选择", new { })
                        @Html.ValidationMessageFor(model => model.CompanyTypeID)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.CompanyContact) @Html.TextBoxFor(model => model.CompanyContact)
                    @Html.ValidationMessageFor(model => model.CompanyContact)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.CompanyFax) @Html.TextBoxFor(model => model.CompanyFax)
                        @Html.ValidationMessageFor(model => model.CompanyFax)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.ZipCode) @Html.TextBoxFor(model => model.ZipCode)
                    @Html.ValidationMessageFor(model => model.ZipCode)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.WebSite) @Html.TextBoxFor(model => model.WebSite)
                        @Html.ValidationMessageFor(model => model.WebSite)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.Address) @Html.TextBoxFor(model => model.Address)
                    @Html.ValidationMessageFor(model => model.Address)</span> <span class="addcompany-right">
                        @Html.LabelFor(model => model.DistrictNumberID) @Html.DropDownListFor(model => model.DistrictNumberID, SelectHelper.DistinctNumberSelectList(null), "请选择", new { })
                        @Html.ValidationMessageFor(model => model.DistrictNumberID)
                    </span></li>
                <li><span class="addcompany-left">@Html.LabelFor(model => model.ProgressID) @Html.DropDownListFor(model => model.ProgressID, SelectHelper.ProgressSelectList(null), "请选择", new { })
                    @Html.ValidationMessageFor(model => model.ProgressID)</span> </li>
                <li><span>@Html.LabelFor(model => model.Business) @Html.TextAreaFor(model => model.Business)
                    @Html.ValidationMessageFor(model => model.Business)</span> </li>
                <li><span>@Html.LabelFor(model => model.Desc) @Html.TextAreaFor(model => model.Desc)
                    @Html.ValidationMessageFor(model => model.Desc)</span> </li>
                <li class="companyCategory">
                    <fieldset>
                        <legend>Categories</legend>
                        @foreach (Category category in CH.GetAllData<Category>(c => c.ProjectID == Model.ProjectID))
                        { 
                            <label class="company-category">@category.Name</label>
                            if (Model.Categories.Contains(category.ID))
                            {
                            <input  name="Categories" type="checkbox" value="@category.ID" checked="checked" />
                            }
                            else
                            { 
                            <input  name="Categories" type="checkbox" value="@category.ID"/>
                            }
                        }
                    </fieldset>
                </li>
            </ul>
            </form>
        </div>
        <div class="dialogue-buttons">
            <input type="button" value="确定" class="t-button" onclick="updatecompany()" />
            <input type="button" value="取消" class="t-button" onclick="cancelEditcompany()" />
        </div>
    </div></text>)
    .Width(750)
    .Height(600)
    .Modal(true).Visible(false)
)
}
@(Html.Telerik().Window()
    .Name("EditLead")
    .Buttons(buttons => buttons.Close())
    .Content(@<text><div class="dialogue-editlead">
        <div class="leadedit-wrapper">
        </div>
        <div class="dialogue-buttons">
            <input type="button" value="确定" class="t-button" onclick="UpdateLead()" />
            <input type="button" value="取消" class="t-button" onclick="CancelEditLead()" />
        </div>
    </div></text>)
    .Width(750)
    .Height(350)
    .Modal(true).Visible(false)
)
@(Html.Telerik().Window()
    .Name("EditCall")
    .Buttons(buttons => buttons.Close())
    .Content(@<text><div class="dialogue-editcall">
        <div class="calledit-wrapper">
        </div>
        <div class="dialogue-buttons">
            <input type="button" value="确定" class="t-button" onclick="UpdateCall()" />
            <input type="button" value="取消" class="t-button" onclick="CancelEditCall()" />
        </div>
    </div></text>)
    .Width(750)
    .Height(200)
    .Modal(true).Visible(false)
)
@helper LeadsInfo()
    {     
        
       foreach (var lead in Model.AjaxLeads)
        {
      <div class="fenge">
	<div class="fenge_2">@lead.LeadName  <input style="float:right" type="button" onclick="onLeadEdit(@(lead.LeadID))" value="+Call" /><input style="float:right" type="button" onclick="onLeadEdit(@(lead.LeadID))" value="更新" /></div>
     
    <div class="fenge_3">
   @*  <div style=" width:100%; height:25px; margin-bottom:-5px; margin-top:10px;">
            
            </div>*@
            <fieldset id="@(lead.LeadID)">
                <legend style="font-size: 13px; margin: 5px;"> 
                @lead.LeadName</legend>
               
                <ul class="fieldname">
                    <li><span class="leadNameCN datainfo"><font>中文名：</font>@lead.LeadNameCH</span> </li>
                    <li><span class="leadNamEN datainfo"><font>英文名：</font>@lead.LeadNameEN</span> </li>
                    <li><span class="leadTitle datainfo"><font>Lead职位：</font>@lead.LeadTitle</span> </li>
                    <li><span class="leadGender datainfo"><font>Lead性别：</font>@lead.Gender</span> </li>
                    <li><span class="LeadDistinctNumberString datainfo"><font>客户区号：</font>@lead.LeadDistinctNumberString</span>
                    </li>
                </ul>
          </fieldset>
       
        <fieldset>
        <legend>联系方式</legend>
                <ul class="fieldname">
                <li><font>直线：</font><span class="LeadContact datainfo">@lead.LeadContact</span> </li>
                    <li><font>手机：</font><span class="LeadMobile datainfo">@lead.LeadMobile</span> </li>
                    <li><font>公司邮箱：</font><span class="LeadEmail datainfo">@lead.Gender</span> </li>
                    <li><font>传真：</font><span class="LeadFax datainfo">@lead.LeadFax</span> </li>
                    <li><font>个人邮箱：</font><span class="LeadPersonalEmail datainfo">@lead.Gender</span></li>
                    <li><font>微博账号：</font><span class="WeiBo datainfo">@lead.WeiBo</span> </li>
                    <li><font>微信账号：</font><span class="WeiXin datainfo">@lead.WeiXin</span> </li>
                    <li><font>LinkIn账号：</font><span class="LinkIn datainfo">@lead.LinkIn</span> </li>
                    <li><font>FaceBook账号：</font><span class="FaceBook datainfo">@lead.FaceBook</span> </li>
                    <li><font>传真：</font><span class="LeadFax datainfo">@lead.LeadFax</span> </li>
                    <li><font>博客地址：</font><span class="Blog datainfo">@lead.Blog</span> </li>
                    </ul>
             </fieldset>
              @*  <span style="font-size: 13px;">描述</span> 
                 <dd class="fieldname">
                        <div>
                            <font></font>
                        </div>
                    </dd>*@
              @* <dt style="font-size: 13px;">致电列表</dt>
                <dd>*@
                @if (lead.AjaxCalls.Count()>0)
                {
        <fieldset>
        <legend>通话记录</legend>
        
                    @(Html.Telerik().Grid<AjaxCall>(lead.AjaxCalls.OrderByDescending(o => o.CallDate)).Name("lead" + lead.LeadID)
                    .Columns(columns =>
                    {
                        columns.Bound(o => o.CallType).Template(@<text><span id="@(item.LeadCallID)_CallType">@item.CallType</span></text>).Width(80);
                        columns.Bound(o => o.CallBackDate).Template(@<text><span id="@(item.LeadCallID)_CallBackDate">@item.CallBackDate</span></text>).Width(100);
                        columns.Bound(o => o.CallDate).Template(@<text><span id="@(item.LeadCallID)_CallDate">@item.CallDate</span></text>).Width(100);
                        columns.Bound(o => o.Caller).Template(@<text><span id="@(item.LeadCallID)_Caller">@item.Caller</span></text>).Width(80);
                        columns.Bound(o => o.Result).Template(@<text><span id="@(item.LeadCallID)_Result">@item.Result</span></text>);
                        columns.Bound(o => o.LeadCallID).Template(@<text><input onclick='EditLeadCall(@item.LeadCallID)' type='button' value='update' style='padding:5px 10px' /></text>);
                    }).Pageable(paging => paging.Enabled(false)).Resizable(resizing => resizing.Columns(true)).Sortable().Scrollable(scrolling => scrolling.Enabled(false))
                       .Filterable())
                @*</dd>
                </dl>*@
            </fieldset>
                    }
    </div>
</div>

        
          
           
        }

}
<style>
    .fieldblock
    {
    	
    }
    
 
    .fieldError
    {
        border: 1px solid red !important;
    }
    
    .fieldname
    {
       
    }
    .fieldname dd{ font-size:15px;  float:left;  padding-left:10px; padding-right:10px; margin:10px;   background-color:#FFBB77;}
    .datainfo
    {
        font-size: 15px;
         color:Black;
   
      
    
         max-width: 76px;
        height: 21px;
        line-height: 21px;
      
      
    }
    .fenge{ width:96%; margin:15px;}
.fenge_2{ background:#FF5809; line-height:30px; border:1px solid #000; border-bottom:none;text-align:center; color:#fff;}
.fenge_3{ border:1px solid #000; padding:6px 20px; line-height:24px;}
</style>
<script type="text/javascript">
    function editCompany() {
        var window = $('#@(guidFormName)').data('tWindow');
        window.center().open();
    }
    function cancelEditcompany() {
        var window = $('#@(guidFormName)').data('tWindow');
        window.close();
    }
    function updatecompany() {
        $('#@(guidFormName) .companyEditForm input').removeClass('fieldError');
        $('#@(guidFormName) .companyEditForm select').removeClass('fieldError');
        String.prototype.isEmpty = function () { return /^\s*$/.test(this); }
        var hasError = false;
        if ($('#@(guidFormName) .companyEditForm #CompanyNameCH').val().isEmpty()) {
            $('#@(guidFormName) .companyEditForm #CompanyNameCH').addClass('fieldError');
            hasError = true;
        }
        if ($('#@(guidFormName) .companyEditForm #DistrictNumberID option:selected').val().isEmpty()) {
            if ($('#@(guidFormName) .companyEditForm #ZipCode').val().isEmpty()) {
                $('#@(guidFormName) .companyEditForm #ZipCode').addClass('fieldError');
                hasError = true;
            }
            if ($('#@(guidFormName) .companyEditForm #Address').val().isEmpty()) {
                $('#@(guidFormName) .companyEditForm #Address').addClass('fieldError');
                hasError = true;
            }
        }
        if ($('#@(guidFormName) .companyEditForm #ProgressID option:selected').val().isEmpty()) {
            $('#@(guidFormName) .companyEditForm #ProgressID').addClass('fieldError');
            hasError = true;
        }
        if (hasError) {
            return;
        }

        var currentCompanyName = $('#currentCompanyName').html();
        var companyName = $('#@(guidFormName) .updateName').val();
        $.post('CheckCompanyExist', { beforeUpdate: currentCompanyName, afterUpdate: companyName }, function (result) {
            if (result.length > 0) {
                alert(result);
            } else {
                var query = $('#@(guidFormName) .companyEditForm').serialize();
                $.post('EditSaleCompany?' + query, null, function (result) {
                    if (result.length > 0) {
                        alert(result);

                    } else {
                        var tempVal = '';
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyNameCH').val();
                        $('#currentCompanyName').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyNameEN').val();
                        $('#currentCompanyNameEN').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #DistrictNumberID option:selected').text();
                        $('#currentCompanyDistrictNumberString').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyContact').val();
                        $('#currentCompanyContact').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #CompanyFax').val();
                        $('#currentCompanyFax').html(tempVal);
                        tempVal = '';
                        $('#@(guidFormName) .companyEditForm input[type=checkbox]:checked').each(function () {
                            tempVal += $(this).prev().html() + ',';
                        });
                        if (tempVal.length > 0) {
                            tempVal = tempVal.substr(0, tempVal.length - 1);
                        }
                        $('#currentCompanyCategoryStrings').html(tempVal);
                        tempVal = $('#@(guidFormName) .companyEditForm #ProgressID option:selected').text();
                        $('#currentProgressString').html(tempVal);
                        var window = $('#@(guidFormName)').data('tWindow');
                        window.close();
                        alert('公司更新成功');
                    }
                });
            }
        });
    }
    var currentLeadID = undefined;
    function onLeadEdit(leadId) {
        currentLeadID = leadId;
        $.post('GetEditLead', { leadId: leadId }, function (result) {
            $('.leadedit-wrapper').html(result);
            $('#EditLead').data('tWindow').center().open();
        });
    }
    function CancelEditLead() {
        var window = $('#EditLead').data('tWindow');
        window.close();
    }
    function UpdateLead() {
        if ($('.dialogue-editlead form').valid()) {
            var query = $('.dialogue-editlead form').serialize();
            $.post('EditLead?' + query, null, function (result) {
                if (result.length > 0) {
                    alert(result);
                } else {
                    $('#' + currentLeadID + ' .leadNameCN').html($('.dialogue-editlead form #Name_CN').val());
                    $('#' + currentLeadID + ' .leadNamEN').html($('.dialogue-editlead form #Name_EN').val());
                    $('#' + currentLeadID + ' .leadTitle').html($('.dialogue-editlead form #Title').val());
                    $('#' + currentLeadID + ' .leadGender').html($('.dialogue-editlead form #Gender').val());
                    $('#' + currentLeadID + ' .LeadDistinctNumberString').html($('.dialogue-editlead form #Name_CN option:selected').text());
                    $('#' + currentLeadID + ' .LeadEmail').html($('.dialogue-editlead form #WorkingEmail').val());
                    $('#' + currentLeadID + ' .LeadPersonalEmail').html($('.dialogue-editlead form #PersonelEmail').val());
                    $('#' + currentLeadID + ' .LeadContact').html($('.dialogue-editlead form #Telephone').val());
                    $('#' + currentLeadID + ' .LeadMobile').html($('.dialogue-editlead form #CellPhone').val());
                    $('#' + currentLeadID + ' .LeadFax').html($('.dialogue-editlead form #Fax').val());
                    $('#' + currentLeadID + ' .WeiBo').html($('.dialogue-editlead form #WeiBo').val());
                    $('#' + currentLeadID + ' .WeiXin').html($('.dialogue-editlead form #WeiXin').val());
                    $('#' + currentLeadID + ' .LinkIn').html($('.dialogue-editlead form #LinkIn').val());
                    $('#' + currentLeadID + ' .FaceBook').html($('.dialogue-editlead form #FaceBook').val());
                    $('#' + currentLeadID + ' .Blog').html($('.dialogue-editlead form #Blog').val());
                    $('#EditLead').data('tWindow').close();
                    alert('Lead更新成功');
                }
            });
        }
    }

    var currentLeadCallID = undefined;
    function EditLeadCall(leadCallID) {
        currentLeadCallID = leadCallID;
        $.post('GetEditLeadCall', { leadCallId: leadCallID }, function (result) {
            $('.calledit-wrapper').html(result);
            var window = $('#EditCall').data('tWindow');
            window.center().open();
        });
    }
    function CancelEditLead() {
        var window = $('#EditCall').data('tWindow');
        window.close();
    }
    function UpdateCall() {
        if ($('.calledit-wrapper form').valid()) {
            var query = $('.calledit-wrapper form').serialize();
            $.post('EditLeadCall?' + query, null, function (result) {
                if (result.length > 0) {
                    alert(result);
                } else {
                    $('#' + currentLeadCallID + '_CallType').html($('.dialogue-editcall form #CallTypeId option:selected').text());
                    $('#' + currentLeadCallID + '_CallBackDate').html($('.dialogue-editcall form #CallBackDate').val());
                    $('#' + currentLeadCallID + '_CallDate').html($('.dialogue-editcall form #CallDate').val());
                    $('#' + currentLeadCallID + '_Result').html($('.dialogue-editcall form #Result').val());
                    $('#EditCall').data('tWindow').close();
                    alert('LeadCall更新成功');
                }
            });
        }
    }
</script>
