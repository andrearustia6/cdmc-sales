@model AssignPerformanceScore
@using Entity
@using Utl
    <fieldset>
        <legend>@SR.Form</legend>
          <div class="editor-label">
            @Html.LabelFor(model => model.Year)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Year, new SelectList(new List<int>() { 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2010}), "-ÇëÑ¡Ôñ-")
            @*@Html.ValidationMessageFor(model => model.Year)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Month)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Month, new SelectList(new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }), "-ÇëÑ¡Ôñ-")
            @*@Html.ValidationMessageFor(model => model.Month)*@
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Score)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Score, new SelectList(new List<int>() { 0,5,10 }), "-ÇëÑ¡Ôñ-")
           @* @Html.ValidationMessageFor(model => model.Score)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TargetName)
        </div>
        <div class="editor-field">
        @{
            List<string> list = new List<string>();
            if (Employee.CurrentRole.Level > 500)
            {
               list= CH.GetAllData<Project>().Select(s => s.Manager).Distinct().ToList();
            }
            if(Employee.CurrentRole.Level == 500)
            {
                list = CH.GetAllData<Project>(p => p.Manager == Employee.CurrentUserName).Select(s => s.TeamLeader).Distinct().ToList();
                var memberforleadsinprojects = CH.GetAllData<Project>(p => p.TeamLeader == Employee.CurrentUserName).SelectMany(m=>m.Members).Select(m=>m.Name).Distinct().ToList();
                if(memberforleadsinprojects.Count()>0)
                {
                    list = list.ToList();
                    list.AddRange(memberforleadsinprojects);
                    if (list.Contains(Employee.CurrentUserName))
                    {
                        list.Remove(Employee.CurrentUserName);
                    }
                }
            }
            if (Employee.CurrentRole.Level == 100)
            {
                list = CH.GetAllData<Project>(p => p.TeamLeader == Employee.CurrentUserName).SelectMany(s => s.Members).Where(w=>w.Name != Employee.CurrentUserName && w.IsActivated==true).Select(s => s.Name).ToList();
            }
            
            @Html.DropDownListFor(model => model.TargetName, new SelectList(list), "-ÇëÑ¡Ôñ-")
            @Html.ValidationMessageFor(model => model.TargetName)
            }
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Assigner)
        </div>
        <div class="editor-field">
        @{
            var ass = @Model.Assigner==null? Employee.CurrentUserName:Model.Assigner;
           <input name="Assigner" value=@ass  />
            @Html.ValidationMessageFor(model => model.Assigner)
            }
        </div>

    </fieldset>
    @Html.Partial("editcommon", Model)

