@model Sales.Model._PreCommission
@using Utl
<style type="text/css">
   
    
    /* in-form editing */
    .t-edit-form-container
    {
         width: 1100px;
        height:400px;
        margin: 1em;
        text-align: right;
    }
   td
   {
       text-align:left;
   }
</style>
<script>
    function strTodate(strr) {
        strr1 = strr.split(' ');
        datestr = strr1[0];
        strr2 = datestr.split('-');
        date1 = new Date(strr2[0], strr2[1] - 1, strr2[2]);
        return date1;
    }
    function dateTostr(date) {
        yy = date.getFullYear();
        mm = date.getMonth() + 1;
        dd = date.getDate();
        hours = date.getHours();
        minutes = date.getMinutes();
        seconds = date.getSeconds();
        datestr = yy + '-' + mm + '-' + dd;
        return datestr
    }

    function FormatNumber(srcStr) {
        var dotPos = srcStr.indexOf(".", 0);
        if (dotPos == -1) {
            resultStr = srcStr;
            return resultStr;
        }
        else {
            resultStr = srcStr.substring(0,dotPos);
            return resultStr;
        }
    }
    $("#TargetNameEN option[text='" + TargetNameEN + "']").attr("selected", true);
    if (TargetNameEN != "") {
        $("#TargetNameEN").hide();
        $("#TargetNameEN").append("<option value='" + TargetNameEN + "'>" + TargetNameEN + "</option>");
        $("#TargetNameEN option[text='" + TargetNameEN + "']").attr("selected", true);
        $("#ProjectID").hide();
        $("#ProjectID").append("<option value='" + ProjectID + "'>" + ProjectID + "</option>");
        $("#ProjectID option[text='" + ProjectID + "']").attr("selected", true);
        $("#salediv").html(TargetNameEN);
        $("#projectdiv").html(ProjectName);
        $("#startdate1").hide();
        $("#startdate2").html(dateTostr(StartDate));
        $("#enddate1").hide();
        $("#enddate2").html(dateTostr(EndDate));
    }
    else {
        $("#DelegateLessRate").val(5);
        $("#DelegateMoreRate").val(15);
        $("#SponsorRate").val(5);
    }
</script>
<script type="text/javascript">

    function OnChange(e) {
        if ($("#StartDate").val() == "")
            return;
        var StartDate = strTodate($("#StartDate").val());
        var DateB = new Date(StartDate.getFullYear(), StartDate.getMonth() + 1, 0); //当月的最后一天
        yy = DateB.getFullYear();
        mm = DateB.getMonth() + 1;
        dd = DateB.getDate();
        datestr = yy + '-' + mm + '-' + dd;
        $("#EndDate").val(datestr);
       
        var month = StartDate.getMonth() + 1;
        $.ajax({
            url: "/Finance/GetSales",
            type: "post",
            dataType: "json",
            data: { month: month},
            error: function (a, b, c) {
                alert("获取数据失败，请重试。");
            },
            success: function (result) {
//                if ($("#TargetNameEN").val() != 0) {
//                    $("#TargetNameEN option[value!='']").remove();
//                }
//                if ($("#ProjectID").val() != 0) {
//                    $("#ProjectID option[value!='']").remove();
                //                }

                $("#TargetNameEN").empty();
                $("#ProjectID").empty();
                $("#TargetNameEN").append("<option value='" + "" + "'>" + "请选择" + "</option>");
                for (var i = 0; i < result.length; i++) {
                    $("#TargetNameEN").append("<option value='" + result[i].salesid + "'>" + result[i].sales + "</option>");
                }
            }
        });
    }
    function OnRateChange(e) {
        calc();
    }
    function OnTaxChange(e) {
        calc();
    }
    function OnBonusChange(e) {
        calc();
    }
    function OnReturnIncomeChange(e) {

        calc();
    }

    function calc() {

        var DelegateLessCommission = $("#DelegateLessIncome").val() * $("#DelegateLessRate").val() / 100;
        var DelegateMoreCommission = ($("#DelegateMoreIncome").val() - $("#DelegateMoreCount").val()*3000) * $("#DelegateMoreRate").val() / 100;
        var SponsorCommission = $("#SponsorIncome").val() * $("#SponsorRate").val() / 100;

        $("#DelegateLessCommission").val(DelegateLessCommission.toFixed(0));
        $("#DelegateMoreCommission").val(DelegateMoreCommission.toFixed(0));
        $("#SponsorCommission").val(SponsorCommission.toFixed(0));

        $("#Commission").val((DelegateLessCommission + DelegateMoreCommission + SponsorCommission).toFixed(0));
        var commission = $("#Commission").val();
        var bonus = $("#Bonus").val();
        var tax = $("#Tax").val();
        var returnincome = $("#ReturnIncome").val();

        $("#ActualCommission").val((commission - bonus - tax - returnincome).toFixed(0));
        $("#TotalCommission").val((commission - bonus - tax).toFixed(0));
    }
    
   function setvalue(result) {
        if (result.TargetNameEN != "") {
            $("#TargetNameCN").val(result.TargetNameCN);
            $("#InOut").val(result.InOut);

            $("#DelegateLessIncomeStr").val(result.DelegateLessIncomeStr);
            $("#DelegateMoreIncomeStr").val(result.DelegateMoreIncomeStr);
            $("#SponsorIncomeStr").val(result.SponsorIncomeStr);
            $("#IncomeStr").val(result.IncomeStr);

            $("#DelegateLessIncome").val(result.DelegateLessIncome == null ? 0 : result.DelegateLessIncome);
            $("#DelegateMoreCount").val(result.DelegateMoreCount == null ? 0 : result.DelegateMoreCount);
            $("#DelegateMoreIncome").val(result.DelegateMoreIncome == null ? 0 : result.DelegateMoreIncome);
            $("#SponsorIncome").val(result.SponsorIncome == null ? 0 : result.SponsorIncome);
            $("#Income").val(result.Income == null ? 0 : result.Income);

            $("#DelegateLessRate").val(5);
            $("#DelegateMoreRate").val(15);
            $("#SponsorRate").val(5);

            var DelegateLessCommission = result.DelegateLessIncome == null ? 0 : result.DelegateLessIncome * 0.05;
            var DelegateMoreCommission = result.DelegateMoreIncome == null ? 0 : (result.DelegateMoreIncome - result.DelegateMoreCount*3000)  * 0.15;
            var SponsorCommission = result.SponsorIncome == null ? 0 : result.SponsorIncome * 0.05;

            $("#DelegateLessCommission").val(DelegateLessCommission.toFixed(0));
            $("#DelegateMoreCommission").val(DelegateMoreCommission.toFixed(0));
            $("#SponsorCommission").val(SponsorCommission.toFixed(0));

            $("#Commission").val((DelegateLessCommission + DelegateMoreCommission + SponsorCommission).toFixed(0));
            $("#TotalCommission").val($("#Commission").val());
            $("#ActualCommission").val($("#Commission").val());
        }
        else
            alert("没有获取到入账数据。");
    }
</script>

<div style=" padding-bottom:10px;width:100%"> 
@Html.HiddenFor(model => model.ID)
@Html.HiddenFor(model => model.DelegateLessIncome)
@Html.HiddenFor(model => model.DelegateMoreIncome)
@Html.HiddenFor(model => model.SponsorIncome)
@Html.HiddenFor(model => model.Income)
<legend  style="text-align:left">提成预发表</legend>
   <table style="width:100%" >
    <tr>
        <td  style="width:20%">
            开始时间
        </td>
        <td  style="width:5%">
            <div id="startdate1">
                @Html.Telerik().DatePickerFor(model => model.StartDate).ClientEvents(e => e.OnChange("OnChange"))
                @Html.ValidationMessageFor(model => model.StartDate)
            </div>
            <div id="startdate2">
            </div>
        </td>
        <td  style="width:20%">
            结束时间
        </td>
        <td  style="width:5%">
            <div id="enddate1">
                @Html.Telerik().DatePickerFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate)
            </div>
            <div id="enddate2">
            </div>
        </td>
        <td  style="width:20%">
            英文名
        </td>
        <td  style="width:5%">
            @Html.DropDownListFor(model => model.TargetNameEN, new SelectList(new List<string>() { "请选择" }))
            @Html.ValidationMessageFor(model => model.TargetNameEN)
            <div id="salediv"></div>
        </td>
        <td  style="width:20%">
            中文名
        </td>
        <td  style="width:5%">
             @Html.TextBoxFor(model => model.TargetNameCN, new { READONLY = "readonly", style = "border:none;" })
        </td>
    </tr>
    <tr>
        <td>
            @Html.LabelFor(model => model.ProjectID)
        </td>
        <td colspan="3">
        @*<select id="projects" name="projects">
            <option value="">请选择</option>
        </select>*@
        @Html.DropDownListFor(model => model.ProjectID, new SelectList(new List<string>() { "请选择" }))
        @Html.ValidationMessageFor(model => model.ProjectID)
        <div id="projectdiv"></div>
        </td>
        <td>
            @Html.LabelFor(model => model.InOut)
        </td>
        <td colspan="3">
            @Html.TextBoxFor(model => model.InOut, new { READONLY = "readonly", style = "border:none;" })
        </td>
    </tr>
    <tr>
        <td >
            @Html.LabelFor(model => model.DelegateLessIncome)
        </td>
        <td >
            ￥@Html.TextBoxFor(model => model.DelegateLessIncomeStr, new { READONLY = "readonly", style = "border:none;width:50%" })
        </td>
        <td >
         @Html.LabelFor(model => model.DelegateLessRate)
        </td>
        <td >
        @Html.TextBoxFor(model => model.DelegateLessRate)
        </td>
        <td colspan="2">
        </td>
        <td  >
            @Html.LabelFor(model => model.DelegateLessCommission)
        </td>
        <td  >
            ￥@Html.TextBoxFor(model => model.DelegateLessCommission, new { READONLY = "readonly", style = "border:none;width:50%" }) 
        </td>
        
    </tr>
    <tr>
       
        <td >
        @Html.LabelFor(model => model.DelegateMoreIncome)
        </td>
        <td>
        ￥@Html.TextBoxFor(model => model.DelegateMoreIncomeStr, new { READONLY = "readonly", style = "border:none;width:50%" })
        </td>
        <td >
            @Html.LabelFor(model => model.DelegateMoreRate)
        </td>
        <td>
            @Html.TextBoxFor(model => model.DelegateMoreRate)
        </td>
        <td>
            大于3000人数
        </td>
        <td>
            @Html.TextBoxFor(model => model.DelegateMoreCount, new { READONLY = "readonly", style = "border:none;" })
        </td>
        <td >
            @Html.LabelFor(model => model.DelegateMoreCommission)
        </td>
        <td>
            ￥@Html.TextBoxFor(model => model.DelegateMoreCommission, new { READONLY = "readonly", style = "border:none;width:50%" }) 
        </td>
         
        
    </tr>
    <tr>
        <td >
            @Html.LabelFor(model => model.SponsorIncome)
        </td>
        <td >
        
            ￥@Html.TextBoxFor(model => model.SponsorIncomeStr, new { READONLY = "readonly", style = "border:none;width:50%" })
        </td>
        <td >
         @Html.LabelFor(model => model.SponsorRate)
        </td>
        <td >
        @Html.TextBoxFor(model => model.SponsorRate)
        </td>
        <td   colspan="2">
        </td>
        <td   >
            @Html.LabelFor(model => model.SponsorCommission)
        </td>
        <td  >
           ￥@Html.TextBoxFor(model => model.SponsorCommission, new { READONLY = "readonly", style = "border:none;width:50%" }) 
        </td>
        
    </tr>
    <tr>
        <td >
         @Html.LabelFor(model => model.Income)
        </td>
        <td colspan="5" >
        ￥@Html.TextBoxFor(model => model.IncomeStr, new { READONLY = "readonly", style = "border:none;width:50%" })
        </td>
        <td>
            @Html.LabelFor(model => model.Commission)
        </td>
        <td >
        ￥@Html.TextBoxFor(model => model.Commission, new { READONLY = "readonly", style = "border:none;width:50%" }) 
        </td>
        
    </tr>
    <tr>
        <td>
         @Html.LabelFor(model => model.Tax)
        </td>
        <td>
        @Html.Telerik().CurrencyTextBoxFor(model => model.Tax).ClientEvents(e => e.OnChange("OnTaxChange"))
        </td>
        <td>
            @Html.LabelFor(model => model.Bonus)
        </td>
        <td>
            @Html.Telerik().CurrencyTextBoxFor(model => model.Bonus).ClientEvents(e => e.OnChange("OnBonusChange"))
        </td>
        
        <td >
        @Html.LabelFor(model => model.TotalCommission)
        </td>
        <td>
        ￥@Html.TextBoxFor(model => model.TotalCommission, new { READONLY = "readonly", style = "border:none;width:50%" })
        </td>
        <td >
         @Html.LabelFor(model => model.ActualCommission)
        </td>
        <td>
        ￥@Html.TextBoxFor(model => model.ActualCommission, new { READONLY = "readonly", style = "border:none;width:50%" })
        </td>
    </tr>
    <tr>
    <td colspan="8" style="color:Red">
    每月提成预发总额 = sponsor出单总额* 提成率(5%)+delegate人均三千以下出单总额*提成率(5%) +(delegate人均3000以上出单总额-3000*人数)*大于3000提成率(15%)
    </td>
    </tr>
</table>
<table style="width:100%">
 <tr>
        
        <td>
         @Html.LabelFor(model => model.ReturnIncome)
        </td>
        <td>
        @Html.Telerik().CurrencyTextBoxFor(model => model.ReturnIncome).ClientEvents(e => e.OnChange("OnReturnIncomeChange"))
        </td>
        <td>
            @Html.LabelFor(model => model.ReturnReason)
        </td>
        <td colspan="5">
            @Html.TextAreaFor(model => model.ReturnReason)
        </td>
        
    </tr>
    <tr>
    <td colspan="8" style="color:Red">
    提成发放后如发生退款，请填写冲销金额
    </td>
    </tr>
</table>
</div>
<script type="text/javascript">

    //页面加载后设置币种的默认值
    $(function () {
        $("#TargetNameEN").change(function () {
            var sale = $("#TargetNameEN").find("option:selected").val();
            if ($("#StartDate").val() == "") {
                alert("请选择开始时间");
                $("#TargetNameEN option[text='请选择']").attr("selected", true);
                return;
            }
            var StartDate = strTodate($("#StartDate").val());
            var month = StartDate.getMonth() + 1;
            //            $.ajax({
            //                url: "/Finance/GetIncome",
            //                type: "post",
            //                dataType: "json",
            //                data: { month: month, sale: sale },
            //                error: function (a, b, c) {
            //                    alert("获取数据失败，请重试。");
            //                },
            //                success: function (result) {
            //                    setvalue(result);
            //                }
            //            });

            $.ajax({
                url: "/Finance/GetProjects",
                type: "post",
                dataType: "json",
                data: { month: month, sale: sale },
                error: function (a, b, c) {
                    alert("获取数据失败，请重试。");
                },
                success: function (result) {
                    $("#ProjectID").empty();
                    //if ($("#ProjectID").val() != 0) {
                    //$("#ProjectID option[value!='']").remove();
                    //}
                    $("#ProjectID").append("<option value='" + "" + "'>" + "请选择" + "</option>");
                    for (var i = 0; i < result.length; i++) {
                        $("#ProjectID").append("<option value='" + result[i].ID + "'>" + result[i].ProjectCode + "</option>");
                    }
                }
            });

        });

        $("#ProjectID").change(function () {
            var sale = $("#TargetNameEN").find("option:selected").val();
            if (sale == "") {
                alert("请选择目标");
                return;
            }
            var projectid = $("#ProjectID").find("option:selected").val();
            if ($("#StartDate").val() == "") {
                alert("请选择开始时间");
                $("#TargetNameEN option[text='请选择']").attr("selected", true);
                return;
            }
            var StartDate = strTodate($("#StartDate").val());
            var month = StartDate.getMonth() + 1;
            $.ajax({
                url: "/Finance/GetIncome",
                type: "post",
                dataType: "json",
                data: { month: month, sale: sale, projectid: projectid },
                error: function (a, b, c) {
                    alert("获取数据失败，请重试。");
                },
                success: function (result) {
                    
                    setvalue(result);
                }
            });
        });


        $("#DelegateLessRate").change(function () {
            calc();
        });
        $("#DelegateMoreRate").change(function () {
            calc();
        });
        $("#SponsorRate").change(function () {
            calc();
        });
    });
    

//    var datepicker = $('#cEndDate').data('tDatePicker');
//    alert(datepicker);
    //    datepicker.val(new Date('1/1/2012'));

    
</script>
