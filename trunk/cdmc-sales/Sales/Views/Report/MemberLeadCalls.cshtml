@{
    ViewBag.Title = "致电列表";
    ViewBag.ShowDuration = "true";
}
@using Model
@using Entity;
@using Utl
@model List<Project>

@Html.Partial("multipleprojectselector")
@{
    
    var startdate = ViewBag.StartDate as DateTime?;
    var calltypelist = ViewBag.SelectedCallTypes as List<int>;
    string types = string.Empty;
    if(calltypelist!=null)
    {
        calltypelist.ForEach(c=>{
            types += c.ToString() + "|";
        });
    }
    var enddate = ViewBag.EndDate as DateTime?;
    if (startdate == null)
    {
        startdate = new DateTime(1, 1, 1);
    }
    if (enddate == null)
    {
        enddate = new DateTime(9999, 1, 1);
    }
    if (Model != null)
    {
        foreach (var p in Model)
        {
@*     @Html.DropDownList("member",new SelectList(CH.GetAllData<Member>(m=>m.ProjectID==p.ID),"ID","Name"),"-请选择-")*@
    <fieldset>
        <legend>项目名称：@p.Name</legend>
        @(Html.Telerik().Grid<AjaxViewCallListData>().Name("Grid" + p.ID)
        .ToolBar(commands => commands.Template(
         @<text>员工筛选： @Html.DropDownList("memberselect", new SelectList(CH.GetAllData<Member>(m => m.ProjectID == p.ID), "Name", "Name"), "所有销售", new { gridid = "Grid" + p.ID, @class = "memberselect" })
         致电类型： @Html.DropDownList("typeselect", new SelectList(CH.GetAllData<LeadCallType>(), "Name", "Name"), "所有类型", new { gridid = "Grid" + p.ID, @class = "typeselect" })
         </text>
            //.ToHtmlString();
       ))
        .Columns(c =>
{
   
    c.Bound(item => item.LeadName).Title("人名").Width(100).Aggregate(aggregates => aggregates.Count()).ClientFooterTemplate("总数: <#= Count #>").ClientGroupFooterTemplate("总数: <#= Count #>");
    c.Bound(item => item.Title).Width(100);
    c.Bound(item => item.CompanyName);
    c.Bound(item => item.Categorys);
    c.Bound(item => item.Progress);
    c.Bound(item => item.MobileDisplay);
    c.Bound(item => item.ContactDisplay);
    c.Bound(item => item.LeadCallType).HtmlAttributes(new { @class = "calltype" });
    c.Bound(item => item.Result).Width(300);
    c.Bound(item => item.CallBackDate);
    c.Bound(item => item.Member);
    c.Bound(item => item.CallDate).Width(200);
}).DataBinding(dataBinding => dataBinding.Ajax().Select("_MemberLeadCalls", "Report", new { projectid = p.ID, startdate = startdate, enddate = enddate, types = types }))
             .Pageable(paging => paging.Style(GridPagerStyles.Status).PageOnScroll(true).PageSize(100)).Resizable(resizing => resizing.Columns(true))
                     .Filterable()
                     .Sortable().Groupable().Scrollable(s => s.Height(350)).ClientEvents(e => e.OnDataBound("onColorSet"))
                 )
    </fieldset>

        }
    }
}

@{ Html.Telerik().ScriptRegistrar().OnDocumentReady(@<text> 
        onMemberSelected();
        onCallTypeSelected();
    </text>);
}