@using Entity
@using Utl
@model IEnumerable<Lead>
@Html.Partial("contenttitle", "客户邮箱")
@using (Html.BeginForm())
{
<div  style="margin:10px; margin-left:0px;">
    <span ><b>目标项目：</b>
    @{
        var ps = CH.GetAllData<Project>(p => p.Market == Employee.CurrentUserName);
        @Html.DropDownList("ProjectID", new SelectList(ps, "ID", "ProjectCode", ViewBag.ProjectID), new { onchange="this.form.submit();"})
    }
    </span>
    <span id="categories"><b>细分行业：</b>
        @{
            List<int> catId = new List<int>();
            string categories = ViewBag.Categories as string;
            if (!String.IsNullOrEmpty(categories))
            {
                List<string> catarr = categories.Split(',').ToList();
                if ((catarr != null) && (catarr.Count > 0))
                {
                    foreach (string cat in catarr)
                    {
                        if (!string.IsNullOrEmpty(cat))
                        {
                            catId.Add(Convert.ToInt32(cat));
                        }
                    }
                }
            }
        }
        @foreach (Category category in CH.GetAllData<Category>(c => c.ProjectID == ViewBag.ProjectID))
        {
            if (catId.Any(c => c == category.ID))
            {
                <label class="company-category"><input  name="Categories" type="checkbox" checked="checked" value="@category.ID" /> @category.Name </label>
            }
            else
            {
                <label class="company-category"><input  name="Categories" type="checkbox" value="@category.ID" /> @category.Name </label>
            }
        }
    </span>
    <span ><b>出单情况：</b>
    @{
        @Html.DropDownList("DealCondition", SelectHelper.DealConditionSelectListInMarket((int?)ViewBag.DealCondition), new { onchange = "this.form.submit();" })
    }
    </span>

    <span ><b>时区：</b>
        @Html.DropDownList("DistinctNumber", SelectHelper.DistinctNumberFilterSelectList((int?)ViewBag.DistinctNumber), new { onchange = "this.form.submit();" })
        @Html.Hidden("DistinctHidden","Page")
    </span>
    <input type="submit" value="提交" />
</div>
}
@(Html.Telerik().Grid<Lead>(Model).Name("Lead")
    .ToolBar(
                commands => commands.Custom()
                    .HtmlAttributes(new { id = "export" })
                    .Text("导出excel格式数据")
                    .Action("EmailExportCsv", "MarketInterface", new
                    {
                        projectid = (int?)ViewBag.ProjectID,
                        dealcondition = (int?)ViewBag.DealCondition,
                        distinctnumber = (int?)ViewBag.DistinctNumber,
                        categories = ViewBag.Categories
                    })
            )
    .DataKeys(keys =>
    {
        keys.Add(s => s.ID);
    })
    .Columns(c =>
    {
        c.Bound(item => item.EMail);
    })
    .Resizable(resizing => resizing.Columns(true))
    .Groupable()
    .Pageable(p => p.PageSize(20))
    .Sortable()
    .Filterable()
    .Scrollable(scrolling => scrolling.Height(350))
)
